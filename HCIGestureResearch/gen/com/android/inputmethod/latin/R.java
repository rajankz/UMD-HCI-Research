/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.inputmethod.latin;

public final class R {
    public static final class anim {
        public static final int alt_code_key_while_typing_fadein=0x7f040000;
        public static final int alt_code_key_while_typing_fadeout=0x7f040001;
        public static final int language_on_spacebar_fadeout=0x7f040002;
        public static final int more_keys_keyboard_fadein=0x7f040003;
        public static final int more_keys_keyboard_fadeout=0x7f040004;
    }
    public static final class array {
        public static final int auto_correction_threshold_mode_indexes=0x7f0d0003;
        public static final int auto_correction_threshold_modes=0x7f0d0004;
        /** 
        Configuration for auto correction
     
         */
        public static final int auto_correction_threshold_values=0x7f0d0000;
        /**  Build.HARDWARE,keyboard_height_in_dp 
 Build.HARDWARE,keyboard_height_in_dp 
         */
        public static final int keyboard_heights=0x7f0d000f;
        /**  For keyboard theme switcher dialog 
         */
        public static final int keyboard_layout_modes=0x7f0d0008;
        public static final int keyboard_layout_modes_values=0x7f0d0009;
        public static final int keypress_vibration_durations=0x7f0d0010;
        public static final int keypress_volumes=0x7f0d0011;
        /**  Compatibility map from subtypeLocale:subtypeExtraValue to keyboardLayoutSet 
         */
        public static final int locale_and_extra_value_to_keyboard_layout_set_map=0x7f0d000e;
        /**  Xoom 
         */
        public static final int phantom_sudden_move_event_device_list=0x7f0d0012;
        /**  Predefined keyboard layout display names 
         */
        public static final int predefined_layout_display_names=0x7f0d000d;
        /**  Predefined keyboard layouts for additional subtype 
         */
        public static final int predefined_layouts=0x7f0d000c;
        public static final int prefs_suggestion_visibilities=0x7f0d0002;
        /**   Option to show/hide the suggestion strip 
         */
        public static final int prefs_suggestion_visibility_values=0x7f0d0001;
        /**  Subtype locale display name exceptions.
         For each exception, there should be related string resource for display name that has
         explicit keyboard layout. The string resource name must be "subtype_with_layout_<locale>. 
         */
        public static final int subtype_locale_exception_keys=0x7f0d000a;
        public static final int subtype_locale_exception_values=0x7f0d000b;
        /**  Droid 
         */
        public static final int sudden_jumping_touch_event_device_list=0x7f0d0013;
        /** 
        An entry of the touch_position_correction word should be:
        1. (float) (touch_center_x - key_center_x) / key_width
        2. (float) (touch_center_y - key_center_y) / key_height
        3. (float) sweet_spot_radius / (key_width^2 + key_height^2)
     
 empty 
         */
        public static final int touch_position_correction_data_empty=0x7f0d0014;
        public static final int touch_position_correction_data_gingerbread=0x7f0d0015;
        public static final int touch_position_correction_data_ice_cream_sandwich=0x7f0d0016;
        /**  Array of Voice Input modes 
         */
        public static final int voice_input_modes=0x7f0d0006;
        /**  Array of Voice Input modes summary 
         */
        public static final int voice_input_modes_summary=0x7f0d0007;
        public static final int voice_input_modes_values=0x7f0d0005;
        /** 
        An entry of the whitelist word should be:
        1. (int)frequency
        2. (String)before
        3. (String)after
     

        An entry of the whitelist word should be:
        1. (int)frequency
        2. (String)before
        3. (String)after
     
         */
        public static final int wordlist_whitelist=0x7f0d0017;
    }
    public static final class attr {
        /**  The keys to display in the more keys keyboard in addition to moreKeys.
             The additional more keys are inserted at the '%' markers in the moreKeys if any.
             They are inserted at the head of moreKeys if none.
             If there are remaining entries of additionalMoreKeys even after all '%' markers have
             been replaced, those remaining entries are appended at the end of moreKeys. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int additionalMoreKeys=0x7f01006f;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alphaAutoCorrect=0x7f010049;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alphaObsoleted=0x7f01004b;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alphaSuggested=0x7f01004a;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alphaTypedWord=0x7f010048;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alphaValidTypedWord=0x7f010047;
        /**  The alternate unicode value that this key outputs while typing.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int altCode=0x7f01006d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int altCodeKeyWhileTypingFadeinAnimator=0x7f010037;
        /**  Fadeout and fadein animator for altCodeWhileTyping keys. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int altCodeKeyWhileTypingFadeoutAnimator=0x7f010036;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int autoCorrectionSpacebarLedEnabled=0x7f01002f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int autoCorrectionSpacebarLedIcon=0x7f010030;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundDimAlpha=0x7f01002d;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> This should be aligned with Key.BACKGROUND_TYPE_* </td></tr>
<tr><td><code>functional</code></td><td>1</td><td></td></tr>
<tr><td><code>action</code></td><td>2</td><td></td></tr>
<tr><td><code>stickyOff</code></td><td>3</td><td></td></tr>
<tr><td><code>stickyOn</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int backgroundType=0x7f010071;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerSuggestionPercentile=0x7f01004d;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clobberSettingsKey=0x7f010085;
        /**  The unicode value that this key outputs.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int code=0x7f01006c;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorAutoCorrect=0x7f010045;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorSuggested=0x7f010046;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorTypedWord=0x7f010044;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorValidTypedWord=0x7f010043;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int countryCode=0x7f01008d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int elementKeyboard=0x7f010091;
        /**  This should be aligned with KeyboardId.ELEMENT_* 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
</table>
         */
        public static final int elementName=0x7f010090;
        /**  Enable proximity characters correction. Disabled by default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int enableProximityCharsCorrection=0x7f010092;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hasShortcutKey=0x7f010087;
        /**  Default horizontal gap between keys, in pixels or percentage of keyboard width. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalGap=0x7f010059;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconDeleteKey=0x7f01005d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEnterKey=0x7f010060;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconLanguageSwitchKey=0x7f010069;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSearchKey=0x7f010061;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSettingsKey=0x7f01005e;
        /**  Icon set for key top and key preview.
             These should be aligned with KeyboardIconsSet.NAMES_AND_ATTR_IDS[] 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShiftKey=0x7f01005c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShiftKeyShifted=0x7f010066;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShortcutForLabel=0x7f010064;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShortcutKey=0x7f010063;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShortcutKeyDisabled=0x7f010067;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSpaceKey=0x7f01005f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSpaceKeyForNumberLayout=0x7f010065;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconTabKey=0x7f010062;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconTabKeyPreview=0x7f010068;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconZwjKey=0x7f01006b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconZwnjKey=0x7f01006a;
        /**  Ignore special key timeout while typing in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ignoreAltCodeKeyTimeout=0x7f010040;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>actionUnspecified</code></td><td>0</td><td> This should be aligned with EditorInfo.IME_ACTION_* </td></tr>
<tr><td><code>actionNone</code></td><td>1</td><td></td></tr>
<tr><td><code>actionGo</code></td><td>2</td><td></td></tr>
<tr><td><code>actionSearch</code></td><td>3</td><td></td></tr>
<tr><td><code>actionSend</code></td><td>4</td><td></td></tr>
<tr><td><code>actionNext</code></td><td>5</td><td></td></tr>
<tr><td><code>actionDone</code></td><td>6</td><td></td></tr>
<tr><td><code>actionPrevious</code></td><td>7</td><td></td></tr>
<tr><td><code>actionCustomLabel</code></td><td>0x100</td><td>  This should be aligned with KeyboardId.IME_ACTION_* </td></tr>
</table>
         */
        public static final int imeAction=0x7f01008a;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isMultiLine=0x7f010089;
        /**  The key action flags. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>isRepeatable</code></td><td>0x01</td><td> This should be aligned with Key.ACTION_FLAGS_* </td></tr>
<tr><td><code>noKeyPreview</code></td><td>0x02</td><td></td></tr>
<tr><td><code>altCodeWhileTyping</code></td><td>0x04</td><td></td></tr>
<tr><td><code>enableLongPress</code></td><td>0x08</td><td></td></tr>
</table>
         */
        public static final int keyActionFlags=0x7f010072;
        /**  Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyBackground=0x7f01000c;
        /**  The hint label to display on the key in conjunction with the label. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabel=0x7f010075;
        /**  Key hint label color 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabelColor=0x7f01001d;
        /**  Size of the text for hint label, in the proportion of key height. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabelRatio=0x7f010014;
        /**  Key hint letter (= one character hint label) color 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLetterColor=0x7f01001c;
        /**  Right padding of hint letter to the edge of the key.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLetterPadding=0x7f010017;
        /**  Size of the text for hint letter (= one character hint label), in the proportion of
             key height. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLetterRatio=0x7f010013;
        /**  Key detection hysteresis distance. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHysteresisDistance=0x7f010038;
        /**  The icon to display on the key instead of the label. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyIcon=0x7f010077;
        /**  The icon for disabled key 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyIconDisabled=0x7f010078;
        /**  The icon to show in the popup preview. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyIconPreview=0x7f010079;
        /**  The label to display on the key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabel=0x7f010074;
        /**  The key label flags. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignLeft</code></td><td>0x01</td><td> This should be aligned with Key.LABEL_FLAGS__* </td></tr>
<tr><td><code>alignRight</code></td><td>0x02</td><td></td></tr>
<tr><td><code>alignLeftOfCenter</code></td><td>0x08</td><td></td></tr>
<tr><td><code>fontNormal</code></td><td>0x10</td><td></td></tr>
<tr><td><code>fontMonoSpace</code></td><td>0x20</td><td></td></tr>
<tr><td><code>followKeyLargeLetterRatio</code></td><td>0x40</td><td></td></tr>
<tr><td><code>followKeyLetterRatio</code></td><td>0x80</td><td></td></tr>
<tr><td><code>followKeyLabelRatio</code></td><td>0xC0</td><td></td></tr>
<tr><td><code>followKeyLargeLabelRatio</code></td><td>0x100</td><td></td></tr>
<tr><td><code>followKeyHintLabelRatio</code></td><td>0x140</td><td></td></tr>
<tr><td><code>hasPopupHint</code></td><td>0x200</td><td></td></tr>
<tr><td><code>hasShiftedLetterHint</code></td><td>0x400</td><td></td></tr>
<tr><td><code>hasHintLabel</code></td><td>0x800</td><td></td></tr>
<tr><td><code>withIconLeft</code></td><td>0x1000</td><td></td></tr>
<tr><td><code>withIconRight</code></td><td>0x2000</td><td></td></tr>
<tr><td><code>autoXScale</code></td><td>0x4000</td><td></td></tr>
<tr><td><code>preserveCase</code></td><td>0x8000</td><td> If true, character case of code, altCode, moreKeys, keyOutputText, keyLabel,
                 or keyHintLabel will never be subject to change. </td></tr>
<tr><td><code>shiftedLetterActivated</code></td><td>0x10000</td><td> If true, use keyShiftedLetterHintActivatedColor for the shifted letter hint and
                 keyTextInactivatedColor for the primary key top label. </td></tr>
<tr><td><code>fromCustomActionLabel</code></td><td>0x20000</td><td> If true, use EditorInfo.actionLabel for the key label. </td></tr>
<tr><td><code>disableKeyHintLabel</code></td><td>0x40000000</td><td> If true, disable keyHintLabel. </td></tr>
<tr><td><code>disableAdditionalMoreKeys</code></td><td>0x80000000</td><td> If true, disable additionalMoreKeys. </td></tr>
</table>
         */
        public static final int keyLabelFlags=0x7f010076;
        /**  Horizontal padding of left/right aligned key label to the edge of the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabelHorizontalPadding=0x7f010016;
        /**  Size of the text for keys with multiple letters, in the proportion of key height. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabelRatio=0x7f010011;
        /**  Size of the text for keys with multiple letters. If not defined, keyLabelRatio takes
             effect. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabelSize=0x7f01000e;
        /**  Large size of the text for keys with multiple letters, in the proportion of key height. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLargeLabelRatio=0x7f010012;
        /**  Large size of the text for one letter keys, in the proportion of key height. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLargeLetterRatio=0x7f010010;
        /**  Size of the text for one letter keys, in the proportion of key height. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLetterRatio=0x7f01000f;
        /**  Size of the text for one letter keys. If not defined, keyLetterRatio takes effect. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLetterSize=0x7f01000d;
        /**  The string of characters to output when this key is pressed. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyOutputText=0x7f010073;
        /**  Bottom padding of popup hint letter "..." to the edge of the key.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPopupHintLetterPadding=0x7f010018;
        /**  The background for key press feedback. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewBackground=0x7f010021;
        /**  Height of the key press feedback popup. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewHeight=0x7f010026;
        /**  Layout resource for key press feedback.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewLayout=0x7f010020;
        /**  The background for the left edge key press feedback. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewLeftBackground=0x7f010022;
        /**  Delay after key releasing and key press feedback dismissing in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewLingerTimeout=0x7f010028;
        /**  Vertical offset of the key press feedback from the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewOffset=0x7f010025;
        /**  The background for the right edge key press feedback. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewRightBackground=0x7f010023;
        /**  The text color for key press feedback. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewTextColor=0x7f010024;
        /**  Size of the text for key press feedback popup, int the proportion of key height 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewTextRatio=0x7f010027;
        /**  Key repeat interval in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyRepeatInterval=0x7f01003d;
        /**  Key repeat start timeout 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyRepeatStartTimeout=0x7f01003c;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintActivatedColor=0x7f01001f;
        /**  Shifted letter hint colors 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintInactivatedColor=0x7f01001e;
        /**  Right padding of shifted letter hint to the edge of the key.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintPadding=0x7f010019;
        /**  Size of the text for shifted letter hint, in the proportion of key height. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintRatio=0x7f010015;
        /**  The key style to specify a set of key attributes defined by <key_style/> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyStyle=0x7f01007a;
        /**  Color to use for the label in a key. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextColor=0x7f01001a;
        /**  Color to use for the label in a key when in inactivated state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextInactivatedColor=0x7f01001b;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> This should be aligned with Typeface.NORMAL etc. </td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
<tr><td><code>boldItalic</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int keyTextStyle=0x7f01002e;
        /**  Width of the key, in pixels or percentage of display width.
             If the value is fillRight, the actual key width will be determined to fill out the area
             up to the right edge of the keyboard. 
 This should be aligned with KeyboardBuilder.Row.KEYWIDTH_* 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fillRight</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int keyWidth=0x7f01007d;
        /**  The X-coordinate of upper right corner of this key including horizontal gap.
             If the value is negative, the origin is the right edge of the keyboard. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyXPos=0x7f01007e;
        /** <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardBottomPadding=0x7f010056;
        /**  Default keyboard height 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardHeight=0x7f010052;
        /** <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardHorizontalEdgesPadding=0x7f010057;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardLayout=0x7f01007f;
        /**  This should be aligned with KeyboardLayoutSet_Element's elementName. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
</table>
         */
        public static final int keyboardLayoutSetElement=0x7f010080;
        /**  Keyboard style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardStyle=0x7f010000;
        /**  Keyboard top, bottom, both horizontal edges paddings. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardTopPadding=0x7f010055;
        /**  KeyboardView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardViewStyle=0x7f010002;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageCode=0x7f01008c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int languageOnSpacebarFadeoutAnimator=0x7f010035;
        /**  Fadeout animator for spacebar language label. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageOnSpacebarFinalAlpha=0x7f010034;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageSwitchKeyEnabled=0x7f010088;
        /**  TODO: Get rid of latinKeyboardStyle 
 LatinKeyboard style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int latinKeyboardStyle=0x7f010001;
        /**  LatinKeyboardView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int latinKeyboardViewStyle=0x7f010003;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int localeCode=0x7f01008b;
        /**  Long press timeout of letter key in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int longPressKeyTimeout=0x7f01003e;
        /**  Long press timeout of shift key in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int longPressShiftKeyTimeout=0x7f01003f;
        /**  Maximum keyboard height, in pixels or percentage of display height 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxKeyboardHeight=0x7f010053;
        /**  Maximum column of more keys keyboard 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxMoreKeysColumn=0x7f010070;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxMoreSuggestionsRow=0x7f01004e;
        /**  Minimum keyboard height represented in pixels, percentage of display height if fraction
             is positive, or percentage of display width if fraction is negative. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minKeyboardHeight=0x7f010054;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minMoreSuggestionsWidth=0x7f01004f;
        /**  This should be aligned with KeyboardId.MODE_* 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>text</code></td><td>0</td><td></td></tr>
<tr><td><code>url</code></td><td>1</td><td></td></tr>
<tr><td><code>email</code></td><td>2</td><td></td></tr>
<tr><td><code>im</code></td><td>3</td><td></td></tr>
<tr><td><code>phone</code></td><td>4</td><td></td></tr>
<tr><td><code>number</code></td><td>5</td><td></td></tr>
</table>
         */
        public static final int mode=0x7f010081;
        /**  The keys to display in the more keys keyboard. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int moreKeys=0x7f01006e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardPanelStyle=0x7f010006;
        /**  MoreKeysKeyboard style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardStyle=0x7f010004;
        /**  MoreKeysKeyboardView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardViewStyle=0x7f010005;
        /**  Layout resource for more keys panel 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysLayout=0x7f01002a;
        /**  More keys keyboard layout template 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysTemplate=0x7f01005b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreSuggestionsViewStyle=0x7f010009;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int navigateNext=0x7f010082;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int navigatePrevious=0x7f010083;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int parentStyle=0x7f01008f;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int passwordInput=0x7f010084;
        /**  Default height of a row (key height + vertical gap), in pixels or percentage of
             keyboard height. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowHeight=0x7f010058;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowColor=0x7f01002b;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowRadius=0x7f01002c;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shortcutKeyEnabled=0x7f010086;
        /**  More keys keyboard will shown at touched point. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showMoreKeysKeyboardAtTouchedPoint=0x7f010041;
        /**  Sliding key input enable 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputEnable=0x7f01003b;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spacebarTextColor=0x7f010032;
        /**  Size of the text for spacebar language label, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spacebarTextRatio=0x7f010031;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spacebarTextShadowColor=0x7f010033;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int styleName=0x7f01008e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionBackgroundStyle=0x7f01000a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionPreviewBackgroundStyle=0x7f01000b;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>autoCorrectBold</code></td><td>0x01</td><td> This should be aligned with SuggestionsViewParams.AUTO_CORRECT_* and etc. </td></tr>
<tr><td><code>autoCorrectUnderline</code></td><td>0x02</td><td></td></tr>
<tr><td><code>validTypedWordBold</code></td><td>0x04</td><td></td></tr>
</table>
         */
        public static final int suggestionStripOption=0x7f010042;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suggestionsCountInStrip=0x7f01004c;
        /**  Suggestions strip style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionsStripBackgroundStyle=0x7f010007;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionsViewStyle=0x7f010008;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int themeId=0x7f010050;
        /**  Touch noise threshold distance in millimeter 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int touchNoiseThresholdDistance=0x7f01003a;
        /**  Touch noise threshold time in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int touchNoiseThresholdTime=0x7f010039;
        /**  Touch position correction 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int touchPositionCorrectionData=0x7f010051;
        /**  Amount to offset the touch Y coordinate by, for bias correction. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalCorrection=0x7f010029;
        /**  Default vertical gap between rows of keys, in pixels or percentage of keyboard
             height. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalGap=0x7f01005a;
        /**  Visual insets 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int visualInsetsLeft=0x7f01007b;
        /** <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int visualInsetsRight=0x7f01007c;
    }
    public static final class bool {
        public static final int config_auto_correction_spacebar_led_enabled=0x7f08000e;
        /**  Default value for next word prediction: after entering a word and a space only, should we look
         at input history to suggest a hopefully helpful suggestions for the next word? 
         */
        public static final int config_default_next_word_prediction=0x7f080008;
        /**  Default value for next word suggestion: while showing suggestions for a word should we weigh
         in the previous word? 
         */
        public static final int config_default_next_word_suggestions=0x7f080007;
        /**  Whether or not Popup on key press is enabled by default 
 Whether or not Popup on key press is enabled by default 
 Whether or not Popup on key press is enabled by default 
         */
        public static final int config_default_popup_preview=0x7f080006;
        public static final int config_default_sound_enabled=0x7f080009;
        public static final int config_default_vibration_enabled=0x7f08000a;
        public static final int config_enable_bigram_suggestions_option=0x7f08000d;
        public static final int config_enable_next_word_suggestions_option=0x7f080004;
        public static final int config_enable_show_popup_on_keypress_option=0x7f080003;
        public static final int config_enable_show_voice_key_option=0x7f080002;
        public static final int config_enable_usability_study_mode_option=0x7f080005;
        /**  Showing more keys keyboard, just above the touched point if true, aligned to the key if
         false 
 Showing more keys keyboard, just above the touched point if true, aligned to the key if
         false 
 Showing more keys keyboard, just above the touched point if true, aligned to the key if
         false 
         */
        public static final int config_show_more_keys_keyboard_at_touched_point=0x7f08000c;
        /** 
        Configuration for LatinKeyboardView
    

        Configuration for LatinKeyboardView
    
         */
        public static final int config_sliding_key_input_enabled=0x7f08000b;
        public static final int config_use_fullscreen_mode=0x7f080001;
        /**  Whether this input method should be used as the default for a locale. Override it
         for latin languages. 
         */
        public static final int im_is_default=0x7f080000;
    }
    public static final class color {
        public static final int candidate_background=0x7f090003;
        public static final int candidate_normal=0x7f090000;
        public static final int candidate_other=0x7f090002;
        public static final int candidate_recommended=0x7f090001;
    }
    public static final class dimen {
        /** 
         Configuration for LatinKeyboardView
    
         */
        public static final int config_key_hysteresis_distance=0x7f0c0000;
        public static final int config_touch_noise_threshold_distance=0x7f0c0001;
        public static final int key_hint_letter_padding=0x7f0c000c;
        /**  left or right padding of label alignment 
 left or right padding of label alignment 
 left or right padding of label alignment 
 left or right padding of label alignment 
 left or right padding of label alignment 
         */
        public static final int key_label_horizontal_padding=0x7f0c000b;
        public static final int key_popup_hint_letter_padding=0x7f0c000d;
        public static final int key_preview_height=0x7f0c0009;
        public static final int key_preview_offset=0x7f0c000a;
        public static final int key_preview_offset_ics=0x7f0c000f;
        public static final int key_uppercase_letter_padding=0x7f0c000e;
        /**  Preferable keyboard height in absolute scale: 1.285in 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 1.100in 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 48.0mm 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 45.0mm 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 48.0mm 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 58.0mm 
 This keyboardHeight value should match with keyboard-heights.xml 
         */
        public static final int keyboardHeight=0x7f0c0002;
        public static final int keyboard_vertical_correction=0x7f0c0008;
        public static final int more_keys_keyboard_horizontal_edges_padding_ics=0x7f0c0005;
        public static final int more_keys_keyboard_key_horizontal_padding=0x7f0c0004;
        /**  Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.2 
 Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.2 
 Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.2 
 Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.2 
         */
        public static final int more_keys_keyboard_slide_allowance=0x7f0c0006;
        /**  popup_key_height x -1.0 
 popup_key_height x -1.0 
 popup_key_height x -1.0 
 popup_key_height x -1.0 
         */
        public static final int more_keys_keyboard_vertical_correction=0x7f0c0007;
        /**  popup_key_height x -0.5 
 popup_key_height x -0.5 
 popup_key_height x -0.5 
 popup_key_height x -0.5 
         */
        public static final int more_keys_keyboard_vertical_correction_ics=0x7f0c0010;
        public static final int more_suggestions_bottom_gap=0x7f0c0014;
        public static final int more_suggestions_hint_text_size=0x7f0c001b;
        public static final int more_suggestions_key_horizontal_padding=0x7f0c0012;
        public static final int more_suggestions_modal_tolerance=0x7f0c0015;
        public static final int more_suggestions_row_height=0x7f0c0013;
        public static final int more_suggestions_slide_allowance=0x7f0c0016;
        public static final int padding_large=0x7f0c001e;
        public static final int padding_medium=0x7f0c001d;
        public static final int padding_small=0x7f0c001c;
        /**  key_height + key_bottom_gap = popup_key_height 
         */
        public static final int popup_key_height=0x7f0c0003;
        public static final int suggestion_min_width=0x7f0c0018;
        public static final int suggestion_padding=0x7f0c0019;
        public static final int suggestion_text_size=0x7f0c001a;
        public static final int suggestions_strip_height=0x7f0c0011;
        public static final int suggestions_strip_padding=0x7f0c0017;
    }
    public static final class drawable {
        public static final int btn_center=0x7f020000;
        public static final int btn_center_default=0x7f020001;
        public static final int btn_center_pressed=0x7f020002;
        public static final int btn_center_selected=0x7f020003;
        public static final int btn_keyboard_key=0x7f020004;
        public static final int btn_keyboard_key3=0x7f020005;
        public static final int btn_keyboard_key_dark_active_holo=0x7f020006;
        public static final int btn_keyboard_key_dark_normal=0x7f020007;
        public static final int btn_keyboard_key_dark_normal_holo=0x7f020008;
        public static final int btn_keyboard_key_dark_normal_off=0x7f020009;
        public static final int btn_keyboard_key_dark_normal_off_holo=0x7f02000a;
        public static final int btn_keyboard_key_dark_normal_on=0x7f02000b;
        public static final int btn_keyboard_key_dark_normal_on_holo=0x7f02000c;
        public static final int btn_keyboard_key_dark_pressed=0x7f02000d;
        public static final int btn_keyboard_key_dark_pressed_holo=0x7f02000e;
        public static final int btn_keyboard_key_dark_pressed_off=0x7f02000f;
        public static final int btn_keyboard_key_dark_pressed_off_holo=0x7f020010;
        public static final int btn_keyboard_key_dark_pressed_on=0x7f020011;
        public static final int btn_keyboard_key_dark_pressed_on_holo=0x7f020012;
        public static final int btn_keyboard_key_fulltrans_normal=0x7f020013;
        public static final int btn_keyboard_key_fulltrans_pressed=0x7f020014;
        public static final int btn_keyboard_key_gingerbread=0x7f020015;
        public static final int btn_keyboard_key_ics=0x7f020016;
        public static final int btn_keyboard_key_light_normal=0x7f020017;
        public static final int btn_keyboard_key_light_normal_holo=0x7f020018;
        public static final int btn_keyboard_key_light_popup_selected=0x7f020019;
        public static final int btn_keyboard_key_light_pressed=0x7f02001a;
        public static final int btn_keyboard_key_light_pressed_holo=0x7f02001b;
        public static final int btn_keyboard_key_normal=0x7f02001c;
        public static final int btn_keyboard_key_normal_off=0x7f02001d;
        public static final int btn_keyboard_key_normal_off_stone=0x7f02001e;
        public static final int btn_keyboard_key_normal_on=0x7f02001f;
        public static final int btn_keyboard_key_normal_on_stone=0x7f020020;
        public static final int btn_keyboard_key_normal_stone=0x7f020021;
        public static final int btn_keyboard_key_popup=0x7f020022;
        public static final int btn_keyboard_key_popup_ics=0x7f020023;
        public static final int btn_keyboard_key_popup_selected_holo=0x7f020024;
        public static final int btn_keyboard_key_pressed=0x7f020025;
        public static final int btn_keyboard_key_pressed_off=0x7f020026;
        public static final int btn_keyboard_key_pressed_on=0x7f020027;
        public static final int btn_keyboard_key_stone=0x7f020028;
        public static final int btn_suggestion=0x7f020029;
        public static final int btn_suggestion_ics=0x7f02002a;
        public static final int btn_suggestion_pressed=0x7f02002b;
        public static final int ic_action_search=0x7f02002c;
        public static final int ic_ime_settings=0x7f02002d;
        public static final int ic_launcher=0x7f02002e;
        public static final int ic_subtype_keyboard=0x7f02002f;
        public static final int keyboard_background=0x7f020030;
        public static final int keyboard_background_holo=0x7f020031;
        public static final int keyboard_dark_background=0x7f020032;
        public static final int keyboard_key_feedback=0x7f020033;
        public static final int keyboard_key_feedback_background=0x7f020034;
        public static final int keyboard_key_feedback_background_holo=0x7f020035;
        public static final int keyboard_key_feedback_ics=0x7f020036;
        public static final int keyboard_key_feedback_left_background_holo=0x7f020037;
        public static final int keyboard_key_feedback_left_ics=0x7f020038;
        public static final int keyboard_key_feedback_left_more_background_holo=0x7f020039;
        public static final int keyboard_key_feedback_more_background=0x7f02003a;
        public static final int keyboard_key_feedback_more_background_holo=0x7f02003b;
        public static final int keyboard_key_feedback_right_background_holo=0x7f02003c;
        public static final int keyboard_key_feedback_right_ics=0x7f02003d;
        public static final int keyboard_key_feedback_right_more_background_holo=0x7f02003e;
        public static final int keyboard_popup_panel_background=0x7f02003f;
        public static final int keyboard_popup_panel_background_holo=0x7f020040;
        public static final int keyboard_suggest_strip=0x7f020041;
        public static final int keyboard_suggest_strip_holo=0x7f020042;
        public static final int more_keys_divider=0x7f020043;
        public static final int more_suggestions_divider=0x7f020044;
        public static final int suggestion_feedback_background=0x7f020045;
        public static final int suggestions_strip_divider=0x7f020046;
        public static final int sym_bkeyboard_delete=0x7f020047;
        public static final int sym_bkeyboard_label_mic=0x7f020048;
        public static final int sym_bkeyboard_mic=0x7f020049;
        public static final int sym_bkeyboard_return=0x7f02004a;
        public static final int sym_bkeyboard_search=0x7f02004b;
        public static final int sym_bkeyboard_settings=0x7f02004c;
        public static final int sym_bkeyboard_shift=0x7f02004d;
        public static final int sym_bkeyboard_shift_locked=0x7f02004e;
        public static final int sym_bkeyboard_space=0x7f02004f;
        public static final int sym_bkeyboard_tab=0x7f020050;
        public static final int sym_bkeyboard_voice_off=0x7f020051;
        public static final int sym_keyboard_delete=0x7f020052;
        public static final int sym_keyboard_delete_holo=0x7f020053;
        public static final int sym_keyboard_done=0x7f020054;
        public static final int sym_keyboard_feedback_tab=0x7f020055;
        public static final int sym_keyboard_label_mic=0x7f020056;
        public static final int sym_keyboard_label_mic_holo=0x7f020057;
        public static final int sym_keyboard_language_switch=0x7f020058;
        public static final int sym_keyboard_mic=0x7f020059;
        public static final int sym_keyboard_return=0x7f02005a;
        public static final int sym_keyboard_return_holo=0x7f02005b;
        public static final int sym_keyboard_search=0x7f02005c;
        public static final int sym_keyboard_search_holo=0x7f02005d;
        public static final int sym_keyboard_settings=0x7f02005e;
        public static final int sym_keyboard_settings_holo=0x7f02005f;
        public static final int sym_keyboard_shift=0x7f020060;
        public static final int sym_keyboard_shift_holo=0x7f020061;
        public static final int sym_keyboard_shift_locked=0x7f020062;
        public static final int sym_keyboard_shift_locked_holo=0x7f020063;
        public static final int sym_keyboard_space=0x7f020064;
        public static final int sym_keyboard_space_holo=0x7f020065;
        public static final int sym_keyboard_space_led=0x7f020066;
        public static final int sym_keyboard_space_led_holo=0x7f020067;
        public static final int sym_keyboard_tab=0x7f020068;
        public static final int sym_keyboard_tab_holo=0x7f020069;
        public static final int sym_keyboard_voice_holo=0x7f02006a;
        public static final int sym_keyboard_voice_off_holo=0x7f02006b;
        public static final int sym_keyboard_zwj_holo=0x7f02006c;
        public static final int sym_keyboard_zwnj_holo=0x7f02006d;
        public static final int transparent=0x7f02006e;
    }
    public static final class fraction {
        public static final int key_bottom_gap=0x7f0e0005;
        public static final int key_bottom_gap_gb=0x7f0e000b;
        public static final int key_bottom_gap_ics=0x7f0e000f;
        public static final int key_bottom_gap_stone=0x7f0e0009;
        public static final int key_hint_label_ratio=0x7f0e0016;
        public static final int key_hint_letter_ratio=0x7f0e0015;
        public static final int key_horizontal_gap=0x7f0e0006;
        public static final int key_horizontal_gap_gb=0x7f0e000c;
        public static final int key_horizontal_gap_ics=0x7f0e0010;
        public static final int key_horizontal_gap_stone=0x7f0e000a;
        public static final int key_label_ratio=0x7f0e0013;
        public static final int key_large_label_ratio=0x7f0e0014;
        public static final int key_large_letter_ratio=0x7f0e0012;
        public static final int key_letter_ratio=0x7f0e0011;
        public static final int key_preview_text_ratio=0x7f0e0018;
        public static final int key_uppercase_letter_ratio=0x7f0e0017;
        public static final int keyboard_bottom_padding=0x7f0e0003;
        public static final int keyboard_bottom_padding_ics=0x7f0e000e;
        public static final int keyboard_bottom_padding_stone=0x7f0e0008;
        public static final int keyboard_horizontal_edges_padding=0x7f0e0004;
        public static final int keyboard_top_padding=0x7f0e0002;
        public static final int keyboard_top_padding_ics=0x7f0e000d;
        public static final int keyboard_top_padding_stone=0x7f0e0007;
        public static final int maxKeyboardHeight=0x7f0e0000;
        /**  <fraction name="minKeyboardHeight">-61.8%p</fraction> 
         */
        public static final int minKeyboardHeight=0x7f0e0001;
        public static final int min_more_suggestions_width=0x7f0e001a;
        public static final int more_suggestions_info_ratio=0x7f0e001b;
        public static final int spacebar_text_ratio=0x7f0e0019;
    }
    public static final class id {
        public static final int action=0x7f070008;
        public static final int actionCustomLabel=0x7f07003b;
        public static final int actionDone=0x7f070039;
        public static final int actionGo=0x7f070035;
        public static final int actionNext=0x7f070038;
        public static final int actionNone=0x7f070034;
        public static final int actionPrevious=0x7f07003a;
        public static final int actionSearch=0x7f070036;
        public static final int actionSend=0x7f070037;
        public static final int actionUnspecified=0x7f070033;
        public static final int alignLeft=0x7f07000f;
        public static final int alignLeftOfCenter=0x7f070011;
        public static final int alignRight=0x7f070010;
        public static final int alphabet=0x7f070025;
        public static final int alphabetAutomaticShifted=0x7f070027;
        public static final int alphabetManualShifted=0x7f070026;
        public static final int alphabetShiftLockShifted=0x7f070029;
        public static final int alphabetShiftLocked=0x7f070028;
        public static final int altCodeWhileTyping=0x7f07000d;
        public static final int autoCorrectBold=0x7f070004;
        public static final int autoCorrectUnderline=0x7f070005;
        public static final int autoXScale=0x7f07001e;
        public static final int bold=0x7f070001;
        public static final int boldItalic=0x7f070003;
        public static final int btnEnd=0x7f070042;
        public static final int btnNext=0x7f070055;
        public static final int cbUseAlternateKeyboard=0x7f07004e;
        public static final int cbUseGestures=0x7f07004d;
        public static final int disableAdditionalMoreKeys=0x7f070023;
        public static final int disableKeyHintLabel=0x7f070022;
        public static final int editText=0x7f07003f;
        public static final int email=0x7f070031;
        public static final int enableLongPress=0x7f07000e;
        public static final int fillRight=0x7f070024;
        public static final int followKeyHintLabelRatio=0x7f070018;
        public static final int followKeyLabelRatio=0x7f070016;
        public static final int followKeyLargeLabelRatio=0x7f070017;
        public static final int followKeyLargeLetterRatio=0x7f070014;
        public static final int followKeyLetterRatio=0x7f070015;
        public static final int fontMonoSpace=0x7f070013;
        public static final int fontNormal=0x7f070012;
        public static final int fromCustomActionLabel=0x7f070021;
        public static final int functional=0x7f070007;
        public static final int hasHintLabel=0x7f07001b;
        public static final int hasPopupHint=0x7f070019;
        public static final int hasShiftedLetterHint=0x7f07001a;
        public static final int im=0x7f070032;
        public static final int isRepeatable=0x7f07000b;
        public static final int italic=0x7f070002;
        public static final int key_preview_backing=0x7f070051;
        public static final int keyboard=0x7f070050;
        public static final int keyboard_layout_set_spinner=0x7f070041;
        public static final int keyboard_view=0x7f070054;
        public static final int menu_settings=0x7f07005d;
        public static final int more_keys_keyboard_view=0x7f070056;
        public static final int more_suggestions_view=0x7f070057;
        public static final int noKeyPreview=0x7f07000c;
        public static final int normal=0x7f070000;
        public static final int numPhrases=0x7f070049;
        public static final int numSets=0x7f070048;
        public static final int number=0x7f07002e;
        public static final int participantId=0x7f070043;
        public static final int phone=0x7f07002c;
        public static final int phoneSymbols=0x7f07002d;
        public static final int phraseText=0x7f07003e;
        public static final int preserveCase=0x7f07001f;
        public static final int rGrpInputSet=0x7f07004a;
        public static final int radgrpTestType=0x7f070044;
        public static final int radio_init=0x7f070046;
        public static final int radio_mainTest=0x7f070045;
        public static final int radio_mixed=0x7f07004c;
        public static final int radio_normal=0x7f07004b;
        public static final int radio_training=0x7f070047;
        public static final int shiftedLetterActivated=0x7f070020;
        public static final int sound_effect_volume_bar=0x7f070059;
        public static final int sound_effect_volume_value=0x7f070058;
        public static final int startButton=0x7f07004f;
        public static final int stickyOff=0x7f070009;
        public static final int stickyOn=0x7f07000a;
        public static final int subtype_locale_spinner=0x7f070040;
        public static final int suggestions_container=0x7f070052;
        public static final int suggestions_strip=0x7f07005a;
        public static final int suggestions_view=0x7f070053;
        public static final int symbols=0x7f07002a;
        public static final int symbolsShifted=0x7f07002b;
        public static final int text=0x7f07002f;
        public static final int topLayout=0x7f07003c;
        public static final int txtNum=0x7f07003d;
        public static final int url=0x7f070030;
        public static final int validTypedWordBold=0x7f070006;
        public static final int vibration_settings=0x7f07005c;
        public static final int vibration_value=0x7f07005b;
        public static final int withIconLeft=0x7f07001c;
        public static final int withIconRight=0x7f07001d;
    }
    public static final class integer {
        public static final int center_suggestion_percentile=0x7f0a0015;
        /**  The language is never displayed if == 0, always displayed if < 0 
         */
        public static final int config_delay_before_fadeout_language_on_spacebar=0x7f0a0012;
        public static final int config_delay_update_old_suggestions=0x7f0a0001;
        public static final int config_delay_update_shift_state=0x7f0a0002;
        public static final int config_delay_update_suggestions=0x7f0a0000;
        public static final int config_double_spaces_turn_into_period_timeout=0x7f0a0008;
        public static final int config_ignore_alt_code_key_timeout=0x7f0a0010;
        /** 
         Configuration for KeyboardView
    
         */
        public static final int config_key_preview_linger_timeout=0x7f0a000a;
        public static final int config_key_repeat_interval=0x7f0a000d;
        public static final int config_key_repeat_start_timeout=0x7f0a000c;
        public static final int config_keyboard_grid_height=0x7f0a0007;
        public static final int config_keyboard_grid_width=0x7f0a0006;
        public static final int config_language_on_spacebar_final_alpha=0x7f0a0003;
        public static final int config_long_press_key_timeout=0x7f0a000e;
        /**  Long pressing shift will invoke caps-lock if > 0, never invoke caps-lock if == 0 
         */
        public static final int config_long_press_shift_key_timeout=0x7f0a000f;
        public static final int config_max_more_keys_column=0x7f0a0009;
        public static final int config_more_keys_keyboard_fadein_anim_time=0x7f0a0004;
        public static final int config_more_keys_keyboard_fadeout_anim_time=0x7f0a0005;
        public static final int config_touch_noise_threshold_time=0x7f0a000b;
        /**   Screen metrics for logging.
            0 = "mdpi phone screen"
            1 = "hdpi phone screen"
            2 = "mdpi 11 inch tablet screen"
            3 = "xhdpi phone screen?"
            4 = ?
    
  Screen metrics for logging.
            0 = "mdpi phone screen"
            1 = "hdpi phone screen"
            2 = "mdpi 11 inch tablet screen"
            3 = "xhdpi phone screen?"
            4 = ?
    
  Screen metrics for logging.
            0 = "mdpi phone screen"
            1 = "hdpi phone screen"
            2 = "mdpi 11 inch tablet screen"
            3 = "xhdpi phone screen?"
            4 = ?
    
         */
        public static final int log_screen_metrics=0x7f0a0011;
        public static final int max_more_suggestions_row=0x7f0a0013;
        public static final int suggestions_count_in_strip=0x7f0a0014;
    }
    public static final class layout {
        public static final int activity_main=0x7f030000;
        public static final int additional_subtype_dialog=0x7f030001;
        public static final int end=0x7f030002;
        public static final int enter=0x7f030003;
        public static final int hint_add_to_dictionary=0x7f030004;
        public static final int input=0x7f030005;
        public static final int input_view=0x7f030006;
        public static final int intermission=0x7f030007;
        public static final int key_preview=0x7f030008;
        public static final int more_keys_keyboard=0x7f030009;
        public static final int more_suggestions=0x7f03000a;
        public static final int sound_effect_volume_dialog=0x7f03000b;
        public static final int suggestion_divider=0x7f03000c;
        public static final int suggestion_info=0x7f03000d;
        public static final int suggestion_preview=0x7f03000e;
        public static final int suggestion_word=0x7f03000f;
        public static final int suggestions_strip=0x7f030010;
        public static final int vibration_settings_dialog=0x7f030011;
    }
    public static final class menu {
        public static final int activity_main=0x7f100000;
    }
    public static final class raw {
        public static final int gestures1=0x7f060000;
        public static final int gestures2=0x7f060001;
        public static final int gestures3=0x7f060002;
        public static final int gestures4=0x7f060003;
        public static final int gesturesall=0x7f060004;
        public static final int init=0x7f060005;
        public static final int main=0x7f060006;
        public static final int main_en=0x7f060007;
        public static final int phrases=0x7f060008;
        public static final int practice=0x7f060009;
        public static final int test=0x7f06000a;
    }
    public static final class string {
        /**  Title of the button to add custom style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int add=0x7f0b00a2;
        /**  Title of the option menu to add a new style entry in the preference settings [CHAR LIMIT=16] 
         */
        public static final int add_style=0x7f0b00a1;
        /**  Indicates that a word has been added to the dictionary 
         */
        public static final int added_word=0x7f0b0061;
        /**  Option name for advanced settings screen [CHAR LIMIT=25] 
         */
        public static final int advanced_settings=0x7f0b0043;
        /**  Option summary for advanced settings screen [CHAR LIMIT=65 (two lines) or 30 (fits on one line, preferable)] 
         */
        public static final int advanced_settings_summary=0x7f0b0044;
        /**  Title for the spell checking service settings screen 
         */
        public static final int android_spell_checker_settings=0x7f0b003a;
        /**  Application name for opensource Android keyboard. AOSP(Android Open Source Project) should not be translated. 
         */
        public static final int aosp_android_keyboard_ime_name=0x7f0b0035;
        /**  Name of Android spell checker service. AOSP(Android Open Source Project) should not be translated. 
         */
        public static final int aosp_spell_checker_service_name=0x7f0b0039;
        public static final int app_name=0x7f0b002a;
        /**  Option to enable auto capitalization of sentences 
         */
        public static final int auto_cap=0x7f0b004f;
        /**  Option to decide the auto correction threshold score 
 Option to enable auto correction [CHAR LIMIT=20]
         */
        public static final int auto_correction=0x7f0b0057;
        /**  Description for auto correction [CHAR LIMIT=65 (two lines) or 30 (fits on one line, preferable)] 
         */
        public static final int auto_correction_summary=0x7f0b0058;
        /**  Option to suggest auto correction suggestions aggressively. Auto-corrects to a word which has even large edit distance from typed word. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_aggeressive=0x7f0b005b;
        public static final int auto_correction_threshold_mode_index_aggeressive=0x7f0b000f;
        public static final int auto_correction_threshold_mode_index_modest=0x7f0b000e;
        public static final int auto_correction_threshold_mode_index_off=0x7f0b000d;
        public static final int auto_correction_threshold_mode_index_very_aggeressive=0x7f0b0010;
        /**  Option to suggest auto correction suggestions modestly. Auto-corrects only to a word which has small edit distance from typed word. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_modest=0x7f0b005a;
        /**  Option to disable auto correction. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_off=0x7f0b0059;
        /**  Option to suggest auto correction suggestions very aggressively. Auto-corrects to a word which has even large edit distance from typed word. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_very_aggeressive=0x7f0b005c;
        /**  Option to enable using next word prediction 
         */
        public static final int bigram_prediction=0x7f0b005f;
        /**  Description for "next word prediction" option. This displays suggestions even when there is no input, based on the previous word. 
         */
        public static final int bigram_prediction_summary=0x7f0b0060;
        /**  Option to enable next word correction 
         */
        public static final int bigram_suggestion=0x7f0b005d;
        /**  Option to enable next word suggestion. This uses the previous word in an attempt to improve the suggestions quality 
         */
        public static final int bigram_suggestion_summary=0x7f0b005e;
        /**  This configuration is the index of the array {@link KeyboardSwitcher.KEYBOARD_THEMES}. 
 This configuration is the index of the array {@link KeyboardSwitcher.KEYBOARD_THEMES}. 
 This configuration is the index of the array {@link KeyboardSwitcher.KEYBOARD_THEMES}. 
         */
        public static final int config_default_keyboard_theme_index=0x7f0b0000;
        /**  Option to configure dictionaries 
         */
        public static final int configure_dictionaries_title=0x7f0b0050;
        /**  Title for configuring input method settings [CHAR LIMIT=35] 
         */
        public static final int configure_input_method=0x7f0b008d;
        /**  Category title for text prediction 
         */
        public static final int correction_category=0x7f0b0041;
        /**  Toast text to describe the same input style already exists [CHAR LIMIT=64]
         */
        public static final int custom_input_style_already_exists=0x7f0b00aa;
        /**  The message of the dialog to note that a custom input style needs to be enabled. [CHAR LIMIT=64] 
         */
        public static final int custom_input_style_note_message=0x7f0b00a7;
        /**  Title of the preference settings for custom input styles (language and keyboard layout pairs) [CHAR LIMIT=35]
         */
        public static final int custom_input_styles_title=0x7f0b00a0;
        /**  dictionary pack package name /settings activity (for shared prefs and settings) 
         */
        public static final int dictionary_pack_package_name=0x7f0b0025;
        public static final int dictionary_pack_settings_activity=0x7f0b0026;
        /**  Title of the button to enable a custom input style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int enable=0x7f0b00a8;
        /**  Option name for enabling insertion of suggestion spans (advanced option) [CHAR LIMIT=25] 
         */
        public static final int enable_span_insert=0x7f0b004d;
        /**  Option summary for enabling insertion of suggestion spans (advanced option) [CHAR LIMIT=65] 
         */
        public static final int enable_span_insert_summary=0x7f0b004e;
        /**  Title for Latin keyboard debug settings activity / dialog 
         */
        public static final int english_ime_debug_settings=0x7f0b0014;
        /**  Title for Latin keyboard input options dialog [CHAR LIMIT=25] 
         */
        public static final int english_ime_input_options=0x7f0b0037;
        /**  Title for Latin keyboard  
         */
        public static final int english_ime_name=0x7f0b0034;
        /**  Title for Latin keyboard settings activity / dialog 
         */
        public static final int english_ime_settings=0x7f0b0036;
        public static final int enterText=0x7f0b0030;
        /**  Category title for general settings for Android keyboard 
         */
        public static final int general_category=0x7f0b0040;
        /**  Inform the user that a particular language has an available dictionary 
         */
        public static final int has_dictionary=0x7f0b0091;
        /**  Add to dictionary hint 
         */
        public static final int hint_add_to_dictionary=0x7f0b0090;
        /**  Title for Latin keyboard  
         */
        public static final int ime_name=0x7f0b0031;
        /**  Option name for including other IMEs in the language switch list [CHAR LIMIT=30] 
         */
        public static final int include_other_imes_in_language_switch_list=0x7f0b0045;
        /**  Option summary for including other IMEs in the language switch list [CHAR LIMIT=65] 
         */
        public static final int include_other_imes_in_language_switch_list_summary=0x7f0b0046;
        /**  Description for delay for dismissing a popup on screen: default value of the delay [CHAR LIMIT=15] 
         */
        public static final int key_preview_popup_dismiss_default_delay=0x7f0b004a;
        /**  Option for the dismiss delay of the key popup [CHAR LIMIT=25] 
         */
        public static final int key_preview_popup_dismiss_delay=0x7f0b0048;
        /**  Description for delay for dismissing a popup on keypress: no delay [CHAR LIMIT=15] 
         */
        public static final int key_preview_popup_dismiss_no_delay=0x7f0b0049;
        /**  Title of the item to change the keyboard theme [CHAR LIMIT=20]
         */
        public static final int keyboard_layout=0x7f0b0094;
        /**  Title of the spinner for choosing a keyboard layout of custom style in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int keyboard_layout_set=0x7f0b00a6;
        /**  Label for soft enter key when it performs DONE action.  Must be short to fit on key! [CHAR LIMIT=5] 
         */
        public static final int label_done_key=0x7f0b0065;
        /**  Label for soft enter key when it performs GO action.  Must be short to fit on key! [CHAR LIMIT=5] 
         */
        public static final int label_go_key=0x7f0b0062;
        /**  Label for soft enter key when it performs NEXT action.  Must be short to fit on key! [CHAR LIMIT=5] 
         */
        public static final int label_next_key=0x7f0b0063;
        /**  Label for "Pause" key of phone number keyboard.  Must be short to fit on key! [CHAR LIMIT=5] 
         */
        public static final int label_pause_key=0x7f0b006a;
        /**  Label for soft enter key when it performs PREVIOUS action.  Must be short to fit on key! [CHAR LIMIT=5] 
         */
        public static final int label_previous_key=0x7f0b0064;
        /**  Label for soft enter key when it performs SEND action.  Must be short to fit on key! [CHAR LIMIT=5] 
         */
        public static final int label_send_key=0x7f0b0066;
        /**  Label for "switch to alphabetic" key.  Must be short to fit on key! [CHAR LIMIT=3] 
         */
        public static final int label_to_alpha_key=0x7f0b0067;
        /**  Label for "switch to symbols" key.  Must be short to fit on key! [CHAR LIMIT=4] 
         */
        public static final int label_to_symbol_key=0x7f0b0068;
        /**  Label for "switch to symbols with microphone" key. This string shouldn't include the "mic"
         part because it'll be appended by the code. Must be short to fit on key! [CHAR LIMIT=3] 
         */
        public static final int label_to_symbol_with_microphone_key=0x7f0b0069;
        /**  Label for "Wait" key of phone number keyboard.  Must be short to fit on key! [CHAR LIMIT=5]
         */
        public static final int label_wait_key=0x7f0b006b;
        /**  Title for input language selection screen 
         */
        public static final int language_selection_title=0x7f0b008e;
        /**  Keyboard theme names 
         */
        public static final int layout_basic=0x7f0b0017;
        public static final int layout_gingerbread=0x7f0b001b;
        public static final int layout_high_contrast=0x7f0b0018;
        public static final int layout_ics=0x7f0b001c;
        public static final int layout_stone_bold=0x7f0b0019;
        public static final int layout_stone_normal=0x7f0b001a;
        /**  Word separator list is the union of all symbols except those that are not separators:
    weak_space_swapping_symbols | weak_space_stripping_symbols
            \ symbols_excluded_from_word_separators 
 Symbol characters list that should switch back to the main layout 
 U+2018: "‘" LEFT SINGLE QUOTATION MARK
         U+2019: "’" RIGHT SINGLE QUOTATION MARK
         U+201A: "‚" SINGLE LOW-9 QUOTATION MARK
         U+201B: "‛" SINGLE HIGH-REVERSED-9 QUOTATION MARK
         U+201C: "“" LEFT DOUBLE QUOTATION MARK
         U+201D: "”" RIGHT DOUBLE QUOTATION MARK
         U+201E: "„" DOUBLE LOW-9 QUOTATION MARK
         U+201F: "‟" DOUBLE HIGH-REVERSED-9 QUOTATION MARK
         U+00AB: "«" LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
         U+00BB: "»" RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK 
 <string name="layout_switch_back_symbols">\"\'&#x2018;&#x2019;&#x201A;&#x201B;&#x201C;&#x201D;&#x201E;&#x201F;&#x00AB;&#x00BB;</string> 
         */
        public static final int layout_switch_back_symbols=0x7f0b0008;
        /**  Name of the main dictionary, as opposed to auxiliary dictionaries (medical/entertainment/sports...) 
         */
        public static final int main_dictionary=0x7f0b0051;
        public static final int menu_settings=0x7f0b002b;
        /**  Category title for misc options  
         */
        public static final int misc_category=0x7f0b0042;
        /**  Title of the button to postpone enabling a custom input style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int not_now=0x7f0b00a9;
        public static final int numOfPhrases=0x7f0b0033;
        /**  Default Values 
         */
        public static final int numOfSets=0x7f0b0032;
        /**  Symbols that should convert weak spaces into real space 
         */
        public static final int phantom_space_promoting_symbols=0x7f0b0006;
        /**  Option to control whether or not to show a popup with a larger font on each key press. 
         */
        public static final int popup_on_keypress=0x7f0b003f;
        /**  Predefined subtypes (language:layout[:extraValue]) in semicolon separated format 
         */
        public static final int predefined_subtypes=0x7f0b0029;
        public static final int prefs_debug_mode=0x7f0b0015;
        /**  Description for enabling to send user statistics to Google 
         */
        public static final int prefs_description_log=0x7f0b0093;
        /**  Preferences item for enabling to send user statistics to Google 
         */
        public static final int prefs_enable_log=0x7f0b0092;
        public static final int prefs_force_non_distinct_multitouch=0x7f0b0016;
        /**  Title of the settings for keypress sound volume 
         */
        public static final int prefs_keypress_sound_volume_settings=0x7f0b00ad;
        /**  Title of the settings for keypress vibration duration 
         */
        public static final int prefs_keypress_vibration_duration_settings=0x7f0b00ac;
        /**  Option to enable showing suggestions 
         */
        public static final int prefs_show_suggestions=0x7f0b0052;
        /**  Description for show suggestions 
         */
        public static final int prefs_show_suggestions_summary=0x7f0b0053;
        /**   Default value of the visibility of the suggestion strip 
         */
        public static final int prefs_suggestion_visibility_default_value=0x7f0b000c;
        public static final int prefs_suggestion_visibility_hide_name=0x7f0b0056;
        /**   Always hide the suggestion strip 
         */
        public static final int prefs_suggestion_visibility_hide_value=0x7f0b000b;
        public static final int prefs_suggestion_visibility_show_name=0x7f0b0054;
        public static final int prefs_suggestion_visibility_show_only_portrait_name=0x7f0b0055;
        /**   Show the suggestion strip only on portrait mode 
         */
        public static final int prefs_suggestion_visibility_show_only_portrait_value=0x7f0b000a;
        /**   Always show the suggestion strip 
         */
        public static final int prefs_suggestion_visibility_show_value=0x7f0b0009;
        /**  Title of an option for usability study mode 
         */
        public static final int prefs_usability_study_mode=0x7f0b00ab;
        /**  Title of the button to remove a custom style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int remove=0x7f0b00a3;
        /**  Title of the button to save a custom style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int save=0x7f0b00a4;
        /**  Preference for input language selection 
         */
        public static final int select_language=0x7f0b008f;
        public static final int settings_ms=0x7f0b0027;
        public static final int settings_name=0x7f0b002c;
        public static final int settings_warning_researcher_mode=0x7f0b0028;
        /**  Option to play back sound on keypress in soft keyboard 
         */
        public static final int sound_on_keypress=0x7f0b003e;
        /**  Name of Android spell checker service 
         */
        public static final int spell_checker_service_name=0x7f0b0038;
        /**  Threshold of the normalized score of the best suggestion for the spell checker to declare
         a word to be "recommended" 
         */
        public static final int spellchecker_recommended_threshold_value=0x7f0b0001;
        /**  Threshold of the normalized score of any dictionary lookup to be offered as a suggestion
         by the spell checker 
         */
        public static final int spellchecker_suggestion_threshold_value=0x7f0b0002;
        /**  Spoken description for the currently entered text 
         */
        public static final int spoken_current_text_is=0x7f0b006d;
        /**  Spoken description for the "Shift" keyboard key when "Caps lock" is on. 
         */
        public static final int spoken_description_caps_lock=0x7f0b0072;
        /**  Spoken description for the "Delete" keyboard key. 
         */
        public static final int spoken_description_delete=0x7f0b0073;
        /**  Spoken description for the "U+2022" (BULLET) keyboard key. 
         */
        public static final int spoken_description_dot=0x7f0b007e;
        /**  Spoken description for the "Mic" keyboard key. 
         */
        public static final int spoken_description_mic=0x7f0b007a;
        /**  Spoken feedback after changing to the alphanumeric keyboard. 
         */
        public static final int spoken_description_mode_alpha=0x7f0b0083;
        /**  Spoken feedback after changing to the phone dialer keyboard. 
         */
        public static final int spoken_description_mode_phone=0x7f0b0084;
        /**  Spoken feedback after changing to the shifted phone dialer (symbols) keyboard. 
         */
        public static final int spoken_description_mode_phone_shift=0x7f0b0085;
        /**  Spoken feedback after changing to the symbols keyboard. 
         */
        public static final int spoken_description_mode_symbol=0x7f0b0082;
        /**  Spoken description for the "Return" keyboard key. 
         */
        public static final int spoken_description_return=0x7f0b007c;
        /**  Spoken description for the "Search" keyboard key. 
         */
        public static final int spoken_description_search=0x7f0b007d;
        /**  Spoken description for the "Settings" keyboard key. 
         */
        public static final int spoken_description_settings=0x7f0b0077;
        /**  Spoken description for the "Shift" keyboard key when "Shift" is off. 
         */
        public static final int spoken_description_shift=0x7f0b0070;
        /**  Spoken description for the "Shift" keyboard key when "Shift" is on. 
         */
        public static final int spoken_description_shift_shifted=0x7f0b0071;
        /**  Spoken feedback after turning "Caps lock" mode on. 
         */
        public static final int spoken_description_shiftmode_locked=0x7f0b0080;
        /**  Spoken feedback after turning "Shift" mode off. 
         */
        public static final int spoken_description_shiftmode_off=0x7f0b0081;
        /**  Spoken feedback after turning "Shift" mode on. 
         */
        public static final int spoken_description_shiftmode_on=0x7f0b007f;
        /**  Spoken description for the "Smiley" keyboard key. 
         */
        public static final int spoken_description_smiley=0x7f0b007b;
        /**  Spoken description for the "Space" keyboard key. 
         */
        public static final int spoken_description_space=0x7f0b0079;
        /**  Spoken description for the "Tab" keyboard key. 
         */
        public static final int spoken_description_tab=0x7f0b0078;
        /**  Spoken description for the "To Alpha" keyboard key. 
         */
        public static final int spoken_description_to_alpha=0x7f0b0075;
        /**  Spoken description for the "To Numbers" keyboard key. 
         */
        public static final int spoken_description_to_numeric=0x7f0b0076;
        /**  Spoken description for the "To Symbol" keyboard key. 
         */
        public static final int spoken_description_to_symbol=0x7f0b0074;
        /**  Spoken description for unknown keyboard keys. 
         */
        public static final int spoken_description_unknown=0x7f0b006f;
        /**  Spoken description when there is no text entered 
         */
        public static final int spoken_no_text_entered=0x7f0b006e;
        /**  Spoken description to let the user know that when typing in a password, they can plug in a headset in to hear spoken descriptions of the keys they type. [CHAR LIMIT=NONE] 
         */
        public static final int spoken_use_headphones=0x7f0b006c;
        /**  Description for Bulgarian (BDS) subtype. 
         */
        public static final int subtype_bulgarian_bds=0x7f0b0024;
        /**  Description for English (United Kingdom) keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_en_GB=0x7f0b0095;
        /**  Description for English (United States) keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_en_US=0x7f0b0096;
        /**  Generic subtype label 
         */
        public static final int subtype_generic=0x7f0b001d;
        public static final int subtype_generic_azerty=0x7f0b0020;
        public static final int subtype_generic_colemak=0x7f0b0022;
        public static final int subtype_generic_dvorak=0x7f0b0021;
        public static final int subtype_generic_pcqwerty=0x7f0b0023;
        /**  Description for generic subtype that has predefined layout.
         The string resource name must be "subtype_generic_<layout name>".
         The string resource with "No language" also must be added to strings.xml and the resource
         name must be "subtype_no_language_<layout name>" 
         */
        public static final int subtype_generic_qwerty=0x7f0b001e;
        public static final int subtype_generic_qwertz=0x7f0b001f;
        /**  Title of the spinner for choosing a language of custom style in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int subtype_locale=0x7f0b00a5;
        /**  Description for language agnostic keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language=0x7f0b0099;
        /**  Description for language agnostic AZERTY keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_azerty=0x7f0b009c;
        /**  Description for language agnostic Colemak keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_colemak=0x7f0b009e;
        /**  Description for language agnostic Dvorak keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_dvorak=0x7f0b009d;
        /**  Description for language agnostic PC QWERTY keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_pcqwerty=0x7f0b009f;
        /**  Description for language agnostic QWERTY keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_qwerty=0x7f0b009a;
        /**  Description for language agnostic QWERTZ keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_qwertz=0x7f0b009b;
        /**  Description for English (United Kingdom) keyboard subtype with explicit keyboard layout [CHAR LIMIT=25]
         This should be identical to subtype_en_GB aside from the trailing (%s). 
         */
        public static final int subtype_with_layout_en_GB=0x7f0b0097;
        /**  Description for English (United States) keyboard subtype with explicit keyboard layout [CHAR LIMIT=25]
         This should be identical to subtype_en_US aside from the trailing (%s). 
         */
        public static final int subtype_with_layout_en_US=0x7f0b0098;
        /**  Symbols that are suggested between words 
         */
        public static final int suggested_punctuations=0x7f0b0003;
        /**  Option to suppress language switch key [CHAR LIMIT=30] 
         */
        public static final int suppress_language_switch_key=0x7f0b0047;
        /**  Symbols that do NOT separate words 
         */
        public static final int symbols_excluded_from_word_separators=0x7f0b0007;
        public static final int textHint=0x7f0b002f;
        public static final int title_activity_main=0x7f0b002d;
        public static final int topText=0x7f0b002e;
        /**  Option name for enabling or disabling the use of names of people in Contacts for suggestion and correction [CHAR LIMIT=25] 
         */
        public static final int use_contacts_dict=0x7f0b004b;
        /**  Description for option enabling or disabling the use of names of people in Contacts for suggestion and correction [CHAR LIMIT=65] 
         */
        public static final int use_contacts_dict_summary=0x7f0b004c;
        /**  Description for the spell checker option to turn on/off contact names lookup. [CHAR LIMIT=65] 
         */
        public static final int use_contacts_for_spellchecking_option_summary=0x7f0b003c;
        /**  Title for the spell checker option to turn on/off contact names lookup [CHAR LIMIT=25] 
         */
        public static final int use_contacts_for_spellchecking_option_title=0x7f0b003b;
        /**  Option to provide vibrate/haptic feedback on keypress 
         */
        public static final int vibrate_on_keypress=0x7f0b003d;
        /**  Preferences item for enabling speech input 
         */
        public static final int voice_input=0x7f0b0086;
        /**  Voice Input modes 
 On settings screen, voice input pop-up menu option to show voice key on main keyboard [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_main_keyboard=0x7f0b0087;
        /**  On settings screen, voice input pop-up menu option to never show voice key [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_off=0x7f0b0089;
        /**  Voice Input modes summary 
 On settings screen, voice input pop-up menu summary text to show voice key on main keyboard [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_summary_main_keyboard=0x7f0b008a;
        /**  On settings screen, voice input pop-up menu summary text to never show voice key [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_summary_off=0x7f0b008c;
        /**  On settings screen, voice input pop-up menu summary text to show voice key on symbols keyboard [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_summary_symbols_keyboard=0x7f0b008b;
        /**  On settings screen, voice input pop-up menu option to show voice key on symbols keyboard [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_symbols_keyboard=0x7f0b0088;
        public static final int voice_mode_main=0x7f0b0011;
        public static final int voice_mode_off=0x7f0b0013;
        public static final int voice_mode_symbols=0x7f0b0012;
        /**  Symbols that should strip a weak space 
         */
        public static final int weak_space_stripping_symbols=0x7f0b0005;
        /**  Symbols that should be swapped with a weak space 
         */
        public static final int weak_space_swapping_symbols=0x7f0b0004;
    }
    public static final class style {
        public static final int AppTheme=0x7f0f002a;
        /**  Theme "Basic" 
         */
        public static final int Keyboard=0x7f0f0003;
        /**  Theme "Gingerbread" 
         */
        public static final int Keyboard_Gingerbread=0x7f0f0019;
        /**  Theme "Basic high contrast" 
         */
        public static final int Keyboard_HighContrast=0x7f0f000e;
        /**  Theme "IceCreamSandwich" 
         */
        public static final int Keyboard_IceCreamSandwich=0x7f0f001e;
        /**  Theme "Stone" 
         */
        public static final int Keyboard_Stone=0x7f0f0011;
        /**  Theme "Stone bold" 
         */
        public static final int Keyboard_Stone_Bold=0x7f0f0016;
        public static final int KeyboardIcons=0x7f0f0002;
        public static final int KeyboardIcons_Black=0x7f0f0000;
        public static final int KeyboardIcons_IceCreamSandwich=0x7f0f0001;
        public static final int KeyboardTheme=0x7f0f002c;
        public static final int KeyboardTheme_Gingerbread=0x7f0f002d;
        public static final int KeyboardTheme_HighContrast=0x7f0f002b;
        public static final int KeyboardTheme_IceCreamSandwich=0x7f0f002e;
        public static final int KeyboardTheme_Stone=0x7f0f0030;
        public static final int KeyboardTheme_Stone_Bold=0x7f0f002f;
        public static final int KeyboardView=0x7f0f0004;
        public static final int KeyboardView_Gingerbread=0x7f0f001a;
        public static final int KeyboardView_HighContrast=0x7f0f000f;
        public static final int KeyboardView_IceCreamSandwich=0x7f0f001f;
        public static final int KeyboardView_Stone=0x7f0f0012;
        public static final int KeyboardView_Stone_Bold=0x7f0f0017;
        public static final int LatinKeyboardView=0x7f0f0005;
        public static final int LatinKeyboardView_Gingerbread=0x7f0f001b;
        public static final int LatinKeyboardView_HighContrast=0x7f0f0010;
        public static final int LatinKeyboardView_IceCreamSandwich=0x7f0f0020;
        public static final int LatinKeyboardView_Stone=0x7f0f0013;
        public static final int LatinKeyboardView_Stone_Bold=0x7f0f0018;
        public static final int MoreKeysKeyboard=0x7f0f0006;
        public static final int MoreKeysKeyboard_Gingerbread=0x7f0f001c;
        public static final int MoreKeysKeyboard_IceCreamSandwich=0x7f0f0021;
        public static final int MoreKeysKeyboard_Stone=0x7f0f0014;
        public static final int MoreKeysKeyboardAnimation=0x7f0f0029;
        public static final int MoreKeysKeyboardPanelStyle=0x7f0f0008;
        public static final int MoreKeysKeyboardPanelStyle_IceCreamSandwich=0x7f0f0023;
        public static final int MoreKeysKeyboardView=0x7f0f0007;
        public static final int MoreKeysKeyboardView_Gingerbread=0x7f0f001d;
        public static final int MoreKeysKeyboardView_IceCreamSandwich=0x7f0f0022;
        public static final int MoreKeysKeyboardView_Stone=0x7f0f0015;
        public static final int MoreSuggestionsViewStyle=0x7f0f000b;
        public static final int MoreSuggestionsViewStyle_IceCreamSandwich=0x7f0f0026;
        public static final int SuggestionBackgroundStyle=0x7f0f000c;
        public static final int SuggestionBackgroundStyle_IceCreamSandwich=0x7f0f0027;
        public static final int SuggestionPreviewBackgroundStyle=0x7f0f000d;
        public static final int SuggestionPreviewBackgroundStyle_IceCreamSandwich=0x7f0f0028;
        public static final int SuggestionsStripBackgroundStyle=0x7f0f0009;
        public static final int SuggestionsStripBackgroundStyle_IceCreamSandwich=0x7f0f0024;
        public static final int SuggestionsViewStyle=0x7f0f000a;
        public static final int SuggestionsViewStyle_IceCreamSandwich=0x7f0f0025;
    }
    public static final class xml {
        public static final int additional_subtype_settings=0x7f050000;
        public static final int ime_preferences=0x7f050001;
        public static final int kbd_10_10_7_symbols=0x7f050002;
        public static final int kbd_10_10_7_symbols_shift=0x7f050003;
        public static final int kbd_arabic=0x7f050004;
        public static final int kbd_azerty=0x7f050005;
        public static final int kbd_bulgarian=0x7f050006;
        public static final int kbd_bulgarian_bds=0x7f050007;
        public static final int kbd_colemak=0x7f050008;
        public static final int kbd_dvorak=0x7f050009;
        public static final int kbd_east_slavic=0x7f05000a;
        public static final int kbd_farsi=0x7f05000b;
        public static final int kbd_georgian=0x7f05000c;
        public static final int kbd_greek=0x7f05000d;
        public static final int kbd_hebrew=0x7f05000e;
        public static final int kbd_hindi=0x7f05000f;
        public static final int kbd_more_keys_keyboard_template=0x7f050010;
        public static final int kbd_nordic=0x7f050011;
        public static final int kbd_number=0x7f050012;
        public static final int kbd_pcqwerty=0x7f050013;
        public static final int kbd_pcqwerty_symbols=0x7f050014;
        public static final int kbd_phone=0x7f050015;
        public static final int kbd_phone_symbols=0x7f050016;
        public static final int kbd_qwerty=0x7f050017;
        public static final int kbd_qwertz=0x7f050018;
        public static final int kbd_simple_qwerty=0x7f050019;
        public static final int kbd_south_slavic=0x7f05001a;
        public static final int kbd_spanish=0x7f05001b;
        public static final int kbd_suggestions_pane_template=0x7f05001c;
        public static final int kbd_symbols=0x7f05001d;
        public static final int kbd_symbols_shift=0x7f05001e;
        public static final int kbd_thai=0x7f05001f;
        public static final int kbd_thai_symbols=0x7f050020;
        public static final int kbd_thai_symbols_shift=0x7f050021;
        public static final int key_apostrophe=0x7f050022;
        public static final int key_azerty_quote=0x7f050023;
        public static final int key_colemak_colon=0x7f050024;
        public static final int key_dash=0x7f050025;
        public static final int key_f1=0x7f050026;
        public static final int key_f2=0x7f050027;
        public static final int key_greek_semicolon=0x7f050028;
        public static final int key_question_exclamation=0x7f050029;
        public static final int key_settings=0x7f05002a;
        public static final int key_shortcut=0x7f05002b;
        public static final int key_simple_space=0x7f05002c;
        public static final int key_space=0x7f05002d;
        public static final int key_styles_common=0x7f05002e;
        public static final int key_styles_currency=0x7f05002f;
        public static final int key_styles_currency_dollar=0x7f050030;
        public static final int key_styles_currency_euro=0x7f050031;
        public static final int key_styles_enter=0x7f050032;
        public static final int key_styles_number=0x7f050033;
        public static final int keyboard_layout_set_arabic=0x7f050034;
        public static final int keyboard_layout_set_azerty=0x7f050035;
        public static final int keyboard_layout_set_bulgarian=0x7f050036;
        public static final int keyboard_layout_set_bulgarian_bds=0x7f050037;
        public static final int keyboard_layout_set_colemak=0x7f050038;
        public static final int keyboard_layout_set_dvorak=0x7f050039;
        public static final int keyboard_layout_set_east_slavic=0x7f05003a;
        public static final int keyboard_layout_set_farsi=0x7f05003b;
        public static final int keyboard_layout_set_georgian=0x7f05003c;
        public static final int keyboard_layout_set_greek=0x7f05003d;
        public static final int keyboard_layout_set_hebrew=0x7f05003e;
        public static final int keyboard_layout_set_hindi=0x7f05003f;
        public static final int keyboard_layout_set_nordic=0x7f050040;
        public static final int keyboard_layout_set_pcqwerty=0x7f050041;
        public static final int keyboard_layout_set_qwerty=0x7f050042;
        public static final int keyboard_layout_set_qwertz=0x7f050043;
        public static final int keyboard_layout_set_simple_qwerty=0x7f050044;
        public static final int keyboard_layout_set_south_slavic=0x7f050045;
        public static final int keyboard_layout_set_spanish=0x7f050046;
        public static final int keyboard_layout_set_thai=0x7f050047;
        public static final int keys_comma_period=0x7f050048;
        public static final int keys_curly_brackets=0x7f050049;
        public static final int keys_dvorak_123=0x7f05004a;
        public static final int keys_less_greater=0x7f05004b;
        public static final int keys_parentheses=0x7f05004c;
        public static final int keys_pcqwerty2_right3=0x7f05004d;
        public static final int keys_pcqwerty3_right2=0x7f05004e;
        public static final int keys_pcqwerty4_right3=0x7f05004f;
        public static final int keys_pcqwerty_symbols1=0x7f050050;
        public static final int keys_pcqwerty_symbols2=0x7f050051;
        public static final int keys_pcqwerty_symbols3=0x7f050052;
        public static final int keys_pcqwerty_symbols4=0x7f050053;
        public static final int keys_square_brackets=0x7f050054;
        public static final int method=0x7f050055;
        public static final int prefs=0x7f050056;
        public static final int prefs_for_debug=0x7f050057;
        public static final int row_dvorak4=0x7f050058;
        public static final int row_hebrew4=0x7f050059;
        public static final int row_pcqwerty5=0x7f05005a;
        public static final int row_qwerty4=0x7f05005b;
        public static final int row_simple_qwerty4=0x7f05005c;
        public static final int row_symbols4=0x7f05005d;
        public static final int row_symbols_shift4=0x7f05005e;
        public static final int rowkeys_arabic1=0x7f05005f;
        public static final int rowkeys_arabic2=0x7f050060;
        public static final int rowkeys_arabic3=0x7f050061;
        public static final int rowkeys_azerty1=0x7f050062;
        public static final int rowkeys_azerty2=0x7f050063;
        public static final int rowkeys_azerty3=0x7f050064;
        public static final int rowkeys_bulgarian1=0x7f050065;
        public static final int rowkeys_bulgarian2=0x7f050066;
        public static final int rowkeys_bulgarian3=0x7f050067;
        public static final int rowkeys_bulgarian_bds1=0x7f050068;
        public static final int rowkeys_bulgarian_bds2=0x7f050069;
        public static final int rowkeys_bulgarian_bds3=0x7f05006a;
        public static final int rowkeys_colemak1=0x7f05006b;
        public static final int rowkeys_colemak2=0x7f05006c;
        public static final int rowkeys_colemak3=0x7f05006d;
        public static final int rowkeys_dvorak1=0x7f05006e;
        public static final int rowkeys_dvorak2=0x7f05006f;
        public static final int rowkeys_dvorak3=0x7f050070;
        public static final int rowkeys_east_slavic1=0x7f050071;
        public static final int rowkeys_east_slavic2=0x7f050072;
        public static final int rowkeys_east_slavic3=0x7f050073;
        public static final int rowkeys_farsi1=0x7f050074;
        public static final int rowkeys_farsi2=0x7f050075;
        public static final int rowkeys_farsi3=0x7f050076;
        public static final int rowkeys_georgian1=0x7f050077;
        public static final int rowkeys_georgian2=0x7f050078;
        public static final int rowkeys_georgian3=0x7f050079;
        public static final int rowkeys_greek1=0x7f05007a;
        public static final int rowkeys_greek2=0x7f05007b;
        public static final int rowkeys_greek3=0x7f05007c;
        public static final int rowkeys_hebrew1=0x7f05007d;
        public static final int rowkeys_hebrew2=0x7f05007e;
        public static final int rowkeys_hebrew3=0x7f05007f;
        public static final int rowkeys_hindi1=0x7f050080;
        public static final int rowkeys_hindi2=0x7f050081;
        public static final int rowkeys_hindi3=0x7f050082;
        public static final int rowkeys_nordic1=0x7f050083;
        public static final int rowkeys_nordic2=0x7f050084;
        public static final int rowkeys_pcqwerty1=0x7f050085;
        public static final int rowkeys_pcqwerty2=0x7f050086;
        public static final int rowkeys_pcqwerty3=0x7f050087;
        public static final int rowkeys_pcqwerty4=0x7f050088;
        public static final int rowkeys_qwerty1=0x7f050089;
        public static final int rowkeys_qwerty2=0x7f05008a;
        public static final int rowkeys_qwerty3=0x7f05008b;
        public static final int rowkeys_qwertz1=0x7f05008c;
        public static final int rowkeys_qwertz3=0x7f05008d;
        public static final int rowkeys_south_slavic1=0x7f05008e;
        public static final int rowkeys_south_slavic2=0x7f05008f;
        public static final int rowkeys_south_slavic3=0x7f050090;
        public static final int rowkeys_spanish2=0x7f050091;
        public static final int rowkeys_symbols1=0x7f050092;
        public static final int rowkeys_symbols2=0x7f050093;
        public static final int rowkeys_symbols3=0x7f050094;
        public static final int rowkeys_symbols_shift1=0x7f050095;
        public static final int rowkeys_symbols_shift2=0x7f050096;
        public static final int rowkeys_symbols_shift3=0x7f050097;
        public static final int rowkeys_thai1=0x7f050098;
        public static final int rowkeys_thai2=0x7f050099;
        public static final int rowkeys_thai3=0x7f05009a;
        public static final int rowkeys_thai4=0x7f05009b;
        public static final int rowkeys_thai_digits=0x7f05009c;
        public static final int rows_10_10_7_symbols=0x7f05009d;
        public static final int rows_10_10_7_symbols_shift=0x7f05009e;
        public static final int rows_arabic=0x7f05009f;
        public static final int rows_azerty=0x7f0500a0;
        public static final int rows_bulgarian=0x7f0500a1;
        public static final int rows_bulgarian_bds=0x7f0500a2;
        public static final int rows_colemak=0x7f0500a3;
        public static final int rows_dvorak=0x7f0500a4;
        public static final int rows_east_slavic=0x7f0500a5;
        public static final int rows_farsi=0x7f0500a6;
        public static final int rows_georgian=0x7f0500a7;
        public static final int rows_greek=0x7f0500a8;
        public static final int rows_hebrew=0x7f0500a9;
        public static final int rows_hindi=0x7f0500aa;
        public static final int rows_nordic=0x7f0500ab;
        public static final int rows_number=0x7f0500ac;
        public static final int rows_number_normal=0x7f0500ad;
        public static final int rows_number_password=0x7f0500ae;
        public static final int rows_pcqwerty=0x7f0500af;
        public static final int rows_pcqwerty_symbols=0x7f0500b0;
        public static final int rows_phone=0x7f0500b1;
        public static final int rows_phone_symbols=0x7f0500b2;
        public static final int rows_qwerty=0x7f0500b3;
        public static final int rows_qwertz=0x7f0500b4;
        public static final int rows_simple_qwerty=0x7f0500b5;
        public static final int rows_south_slavic=0x7f0500b6;
        public static final int rows_spanish=0x7f0500b7;
        public static final int rows_symbols=0x7f0500b8;
        public static final int rows_symbols_shift=0x7f0500b9;
        public static final int rows_thai=0x7f0500ba;
        public static final int rows_thai_symbols=0x7f0500bb;
        public static final int rows_thai_symbols_shift=0x7f0500bc;
        public static final int spell_checker_settings=0x7f0500bd;
        public static final int spellchecker=0x7f0500be;
    }
    public static final class styleable {
        /** Attributes that can be used with a Keyboard.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_horizontalGap com.android.inputmethod.latin:horizontalGap}</code></td><td> Default horizontal gap between keys, in pixels or percentage of keyboard width.</td></tr>
           <tr><td><code>{@link #Keyboard_iconDeleteKey com.android.inputmethod.latin:iconDeleteKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconEnterKey com.android.inputmethod.latin:iconEnterKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconLanguageSwitchKey com.android.inputmethod.latin:iconLanguageSwitchKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSearchKey com.android.inputmethod.latin:iconSearchKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSettingsKey com.android.inputmethod.latin:iconSettingsKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShiftKey com.android.inputmethod.latin:iconShiftKey}</code></td><td> Icon set for key top and key preview.</td></tr>
           <tr><td><code>{@link #Keyboard_iconShiftKeyShifted com.android.inputmethod.latin:iconShiftKeyShifted}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShortcutForLabel com.android.inputmethod.latin:iconShortcutForLabel}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShortcutKey com.android.inputmethod.latin:iconShortcutKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShortcutKeyDisabled com.android.inputmethod.latin:iconShortcutKeyDisabled}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSpaceKey com.android.inputmethod.latin:iconSpaceKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSpaceKeyForNumberLayout com.android.inputmethod.latin:iconSpaceKeyForNumberLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconTabKey com.android.inputmethod.latin:iconTabKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconTabKeyPreview com.android.inputmethod.latin:iconTabKeyPreview}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconZwjKey com.android.inputmethod.latin:iconZwjKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconZwnjKey com.android.inputmethod.latin:iconZwnjKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardBottomPadding com.android.inputmethod.latin:keyboardBottomPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardHeight com.android.inputmethod.latin:keyboardHeight}</code></td><td> Default keyboard height </td></tr>
           <tr><td><code>{@link #Keyboard_keyboardHorizontalEdgesPadding com.android.inputmethod.latin:keyboardHorizontalEdgesPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardTopPadding com.android.inputmethod.latin:keyboardTopPadding}</code></td><td> Keyboard top, bottom, both horizontal edges paddings.</td></tr>
           <tr><td><code>{@link #Keyboard_maxKeyboardHeight com.android.inputmethod.latin:maxKeyboardHeight}</code></td><td> Maximum keyboard height, in pixels or percentage of display height </td></tr>
           <tr><td><code>{@link #Keyboard_minKeyboardHeight com.android.inputmethod.latin:minKeyboardHeight}</code></td><td> Minimum keyboard height represented in pixels, percentage of display height if fraction
             is positive, or percentage of display width if fraction is negative.</td></tr>
           <tr><td><code>{@link #Keyboard_moreKeysTemplate com.android.inputmethod.latin:moreKeysTemplate}</code></td><td> More keys keyboard layout template </td></tr>
           <tr><td><code>{@link #Keyboard_rowHeight com.android.inputmethod.latin:rowHeight}</code></td><td> Default height of a row (key height + vertical gap), in pixels or percentage of
             keyboard height.</td></tr>
           <tr><td><code>{@link #Keyboard_themeId com.android.inputmethod.latin:themeId}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_touchPositionCorrectionData com.android.inputmethod.latin:touchPositionCorrectionData}</code></td><td> Touch position correction </td></tr>
           <tr><td><code>{@link #Keyboard_verticalGap com.android.inputmethod.latin:verticalGap}</code></td><td> Default vertical gap between rows of keys, in pixels or percentage of keyboard
             height.</td></tr>
           </table>
           @see #Keyboard_horizontalGap
           @see #Keyboard_iconDeleteKey
           @see #Keyboard_iconEnterKey
           @see #Keyboard_iconLanguageSwitchKey
           @see #Keyboard_iconSearchKey
           @see #Keyboard_iconSettingsKey
           @see #Keyboard_iconShiftKey
           @see #Keyboard_iconShiftKeyShifted
           @see #Keyboard_iconShortcutForLabel
           @see #Keyboard_iconShortcutKey
           @see #Keyboard_iconShortcutKeyDisabled
           @see #Keyboard_iconSpaceKey
           @see #Keyboard_iconSpaceKeyForNumberLayout
           @see #Keyboard_iconTabKey
           @see #Keyboard_iconTabKeyPreview
           @see #Keyboard_iconZwjKey
           @see #Keyboard_iconZwnjKey
           @see #Keyboard_keyboardBottomPadding
           @see #Keyboard_keyboardHeight
           @see #Keyboard_keyboardHorizontalEdgesPadding
           @see #Keyboard_keyboardTopPadding
           @see #Keyboard_maxKeyboardHeight
           @see #Keyboard_minKeyboardHeight
           @see #Keyboard_moreKeysTemplate
           @see #Keyboard_rowHeight
           @see #Keyboard_themeId
           @see #Keyboard_touchPositionCorrectionData
           @see #Keyboard_verticalGap
         */
        public static final int[] Keyboard = {
            0x7f010050, 0x7f010051, 0x7f010052, 0x7f010053,
            0x7f010054, 0x7f010055, 0x7f010056, 0x7f010057,
            0x7f010058, 0x7f010059, 0x7f01005a, 0x7f01005b,
            0x7f01005c, 0x7f01005d, 0x7f01005e, 0x7f01005f,
            0x7f010060, 0x7f010061, 0x7f010062, 0x7f010063,
            0x7f010064, 0x7f010065, 0x7f010066, 0x7f010067,
            0x7f010068, 0x7f010069, 0x7f01006a, 0x7f01006b
        };
        /**
          <p>
          @attr description
           Default horizontal gap between keys, in pixels or percentage of keyboard width. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:horizontalGap
        */
        public static final int Keyboard_horizontalGap = 9;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconDeleteKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconDeleteKey
        */
        public static final int Keyboard_iconDeleteKey = 13;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconEnterKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconEnterKey
        */
        public static final int Keyboard_iconEnterKey = 16;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconLanguageSwitchKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconLanguageSwitchKey
        */
        public static final int Keyboard_iconLanguageSwitchKey = 25;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconSearchKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconSearchKey
        */
        public static final int Keyboard_iconSearchKey = 17;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconSettingsKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconSettingsKey
        */
        public static final int Keyboard_iconSettingsKey = 14;
        /**
          <p>
          @attr description
           Icon set for key top and key preview.
             These should be aligned with KeyboardIconsSet.NAMES_AND_ATTR_IDS[] 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconShiftKey
        */
        public static final int Keyboard_iconShiftKey = 12;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconShiftKeyShifted}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconShiftKeyShifted
        */
        public static final int Keyboard_iconShiftKeyShifted = 22;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconShortcutForLabel}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconShortcutForLabel
        */
        public static final int Keyboard_iconShortcutForLabel = 20;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconShortcutKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconShortcutKey
        */
        public static final int Keyboard_iconShortcutKey = 19;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconShortcutKeyDisabled}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconShortcutKeyDisabled
        */
        public static final int Keyboard_iconShortcutKeyDisabled = 23;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconSpaceKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconSpaceKey
        */
        public static final int Keyboard_iconSpaceKey = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconSpaceKeyForNumberLayout}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconSpaceKeyForNumberLayout
        */
        public static final int Keyboard_iconSpaceKeyForNumberLayout = 21;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconTabKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconTabKey
        */
        public static final int Keyboard_iconTabKey = 18;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconTabKeyPreview}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconTabKeyPreview
        */
        public static final int Keyboard_iconTabKeyPreview = 24;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconZwjKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconZwjKey
        */
        public static final int Keyboard_iconZwjKey = 27;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconZwnjKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:iconZwnjKey
        */
        public static final int Keyboard_iconZwnjKey = 26;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyboardBottomPadding}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyboardBottomPadding
        */
        public static final int Keyboard_keyboardBottomPadding = 6;
        /**
          <p>
          @attr description
           Default keyboard height 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyboardHeight
        */
        public static final int Keyboard_keyboardHeight = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyboardHorizontalEdgesPadding}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyboardHorizontalEdgesPadding
        */
        public static final int Keyboard_keyboardHorizontalEdgesPadding = 7;
        /**
          <p>
          @attr description
           Keyboard top, bottom, both horizontal edges paddings. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyboardTopPadding
        */
        public static final int Keyboard_keyboardTopPadding = 5;
        /**
          <p>
          @attr description
           Maximum keyboard height, in pixels or percentage of display height 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:maxKeyboardHeight
        */
        public static final int Keyboard_maxKeyboardHeight = 3;
        /**
          <p>
          @attr description
           Minimum keyboard height represented in pixels, percentage of display height if fraction
             is positive, or percentage of display width if fraction is negative. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:minKeyboardHeight
        */
        public static final int Keyboard_minKeyboardHeight = 4;
        /**
          <p>
          @attr description
           More keys keyboard layout template 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:moreKeysTemplate
        */
        public static final int Keyboard_moreKeysTemplate = 11;
        /**
          <p>
          @attr description
           Default height of a row (key height + vertical gap), in pixels or percentage of
             keyboard height. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rowHeight
        */
        public static final int Keyboard_rowHeight = 8;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#themeId}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:themeId
        */
        public static final int Keyboard_themeId = 0;
        /**
          <p>
          @attr description
           Touch position correction 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:touchPositionCorrectionData
        */
        public static final int Keyboard_touchPositionCorrectionData = 1;
        /**
          <p>
          @attr description
           Default vertical gap between rows of keys, in pixels or percentage of keyboard
             height. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:verticalGap
        */
        public static final int Keyboard_verticalGap = 10;
        /** Attributes that can be used with a KeyboardLayoutSet_Element.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Element_elementKeyboard com.android.inputmethod.latin:elementKeyboard}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Element_elementName com.android.inputmethod.latin:elementName}</code></td><td> This should be aligned with KeyboardId.</td></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Element_enableProximityCharsCorrection com.android.inputmethod.latin:enableProximityCharsCorrection}</code></td><td> Enable proximity characters correction.</td></tr>
           </table>
           @see #KeyboardLayoutSet_Element_elementKeyboard
           @see #KeyboardLayoutSet_Element_elementName
           @see #KeyboardLayoutSet_Element_enableProximityCharsCorrection
         */
        public static final int[] KeyboardLayoutSet_Element = {
            0x7f010090, 0x7f010091, 0x7f010092
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#elementKeyboard}
          attribute's value can be found in the {@link #KeyboardLayoutSet_Element} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:elementKeyboard
        */
        public static final int KeyboardLayoutSet_Element_elementKeyboard = 1;
        /**
          <p>
          @attr description
           This should be aligned with KeyboardId.ELEMENT_* 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:elementName
        */
        public static final int KeyboardLayoutSet_Element_elementName = 0;
        /**
          <p>
          @attr description
           Enable proximity characters correction. Disabled by default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:enableProximityCharsCorrection
        */
        public static final int KeyboardLayoutSet_Element_enableProximityCharsCorrection = 2;
        /** Attributes that can be used with a KeyboardTheme.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardTheme_keyboardStyle com.android.inputmethod.latin:keyboardStyle}</code></td><td> Keyboard style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_keyboardViewStyle com.android.inputmethod.latin:keyboardViewStyle}</code></td><td> KeyboardView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_latinKeyboardStyle com.android.inputmethod.latin:latinKeyboardStyle}</code></td><td> TODO: Get rid of latinKeyboardStyle 
 LatinKeyboard style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_latinKeyboardViewStyle com.android.inputmethod.latin:latinKeyboardViewStyle}</code></td><td> LatinKeyboardView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardPanelStyle com.android.inputmethod.latin:moreKeysKeyboardPanelStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardStyle com.android.inputmethod.latin:moreKeysKeyboardStyle}</code></td><td> MoreKeysKeyboard style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardViewStyle com.android.inputmethod.latin:moreKeysKeyboardViewStyle}</code></td><td> MoreKeysKeyboardView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreSuggestionsViewStyle com.android.inputmethod.latin:moreSuggestionsViewStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardTheme_suggestionBackgroundStyle com.android.inputmethod.latin:suggestionBackgroundStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardTheme_suggestionPreviewBackgroundStyle com.android.inputmethod.latin:suggestionPreviewBackgroundStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardTheme_suggestionsStripBackgroundStyle com.android.inputmethod.latin:suggestionsStripBackgroundStyle}</code></td><td> Suggestions strip style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_suggestionsViewStyle com.android.inputmethod.latin:suggestionsViewStyle}</code></td><td></td></tr>
           </table>
           @see #KeyboardTheme_keyboardStyle
           @see #KeyboardTheme_keyboardViewStyle
           @see #KeyboardTheme_latinKeyboardStyle
           @see #KeyboardTheme_latinKeyboardViewStyle
           @see #KeyboardTheme_moreKeysKeyboardPanelStyle
           @see #KeyboardTheme_moreKeysKeyboardStyle
           @see #KeyboardTheme_moreKeysKeyboardViewStyle
           @see #KeyboardTheme_moreSuggestionsViewStyle
           @see #KeyboardTheme_suggestionBackgroundStyle
           @see #KeyboardTheme_suggestionPreviewBackgroundStyle
           @see #KeyboardTheme_suggestionsStripBackgroundStyle
           @see #KeyboardTheme_suggestionsViewStyle
         */
        public static final int[] KeyboardTheme = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b
        };
        /**
          <p>
          @attr description
           Keyboard style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyboardStyle
        */
        public static final int KeyboardTheme_keyboardStyle = 0;
        /**
          <p>
          @attr description
           KeyboardView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyboardViewStyle
        */
        public static final int KeyboardTheme_keyboardViewStyle = 2;
        /**
          <p>
          @attr description
           TODO: Get rid of latinKeyboardStyle 
 LatinKeyboard style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:latinKeyboardStyle
        */
        public static final int KeyboardTheme_latinKeyboardStyle = 1;
        /**
          <p>
          @attr description
           LatinKeyboardView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:latinKeyboardViewStyle
        */
        public static final int KeyboardTheme_latinKeyboardViewStyle = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#moreKeysKeyboardPanelStyle}
          attribute's value can be found in the {@link #KeyboardTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:moreKeysKeyboardPanelStyle
        */
        public static final int KeyboardTheme_moreKeysKeyboardPanelStyle = 6;
        /**
          <p>
          @attr description
           MoreKeysKeyboard style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:moreKeysKeyboardStyle
        */
        public static final int KeyboardTheme_moreKeysKeyboardStyle = 4;
        /**
          <p>
          @attr description
           MoreKeysKeyboardView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:moreKeysKeyboardViewStyle
        */
        public static final int KeyboardTheme_moreKeysKeyboardViewStyle = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#moreSuggestionsViewStyle}
          attribute's value can be found in the {@link #KeyboardTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:moreSuggestionsViewStyle
        */
        public static final int KeyboardTheme_moreSuggestionsViewStyle = 9;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#suggestionBackgroundStyle}
          attribute's value can be found in the {@link #KeyboardTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:suggestionBackgroundStyle
        */
        public static final int KeyboardTheme_suggestionBackgroundStyle = 10;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#suggestionPreviewBackgroundStyle}
          attribute's value can be found in the {@link #KeyboardTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:suggestionPreviewBackgroundStyle
        */
        public static final int KeyboardTheme_suggestionPreviewBackgroundStyle = 11;
        /**
          <p>
          @attr description
           Suggestions strip style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:suggestionsStripBackgroundStyle
        */
        public static final int KeyboardTheme_suggestionsStripBackgroundStyle = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#suggestionsViewStyle}
          attribute's value can be found in the {@link #KeyboardTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:suggestionsViewStyle
        */
        public static final int KeyboardTheme_suggestionsViewStyle = 8;
        /** Attributes that can be used with a KeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardView_backgroundDimAlpha com.android.inputmethod.latin:backgroundDimAlpha}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_keyBackground com.android.inputmethod.latin:keyBackground}</code></td><td> Image for the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyHintLabelColor com.android.inputmethod.latin:keyHintLabelColor}</code></td><td> Key hint label color </td></tr>
           <tr><td><code>{@link #KeyboardView_keyHintLabelRatio com.android.inputmethod.latin:keyHintLabelRatio}</code></td><td> Size of the text for hint label, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyHintLetterColor com.android.inputmethod.latin:keyHintLetterColor}</code></td><td> Key hint letter (= one character hint label) color </td></tr>
           <tr><td><code>{@link #KeyboardView_keyHintLetterPadding com.android.inputmethod.latin:keyHintLetterPadding}</code></td><td> Right padding of hint letter to the edge of the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyHintLetterRatio com.android.inputmethod.latin:keyHintLetterRatio}</code></td><td> Size of the text for hint letter (= one character hint label), in the proportion of
             key height.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyLabelHorizontalPadding com.android.inputmethod.latin:keyLabelHorizontalPadding}</code></td><td> Horizontal padding of left/right aligned key label to the edge of the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyLabelRatio com.android.inputmethod.latin:keyLabelRatio}</code></td><td> Size of the text for keys with multiple letters, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyLabelSize com.android.inputmethod.latin:keyLabelSize}</code></td><td> Size of the text for keys with multiple letters.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyLargeLabelRatio com.android.inputmethod.latin:keyLargeLabelRatio}</code></td><td> Large size of the text for keys with multiple letters, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyLargeLetterRatio com.android.inputmethod.latin:keyLargeLetterRatio}</code></td><td> Large size of the text for one letter keys, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyLetterRatio com.android.inputmethod.latin:keyLetterRatio}</code></td><td> Size of the text for one letter keys, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyLetterSize com.android.inputmethod.latin:keyLetterSize}</code></td><td> Size of the text for one letter keys.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPopupHintLetterPadding com.android.inputmethod.latin:keyPopupHintLetterPadding}</code></td><td> Bottom padding of popup hint letter ".</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewBackground com.android.inputmethod.latin:keyPreviewBackground}</code></td><td> The background for key press feedback.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewHeight com.android.inputmethod.latin:keyPreviewHeight}</code></td><td> Height of the key press feedback popup.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewLayout com.android.inputmethod.latin:keyPreviewLayout}</code></td><td> Layout resource for key press feedback.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewLeftBackground com.android.inputmethod.latin:keyPreviewLeftBackground}</code></td><td> The background for the left edge key press feedback.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewLingerTimeout com.android.inputmethod.latin:keyPreviewLingerTimeout}</code></td><td> Delay after key releasing and key press feedback dismissing in millisecond </td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewOffset com.android.inputmethod.latin:keyPreviewOffset}</code></td><td> Vertical offset of the key press feedback from the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewRightBackground com.android.inputmethod.latin:keyPreviewRightBackground}</code></td><td> The background for the right edge key press feedback.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewTextColor com.android.inputmethod.latin:keyPreviewTextColor}</code></td><td> The text color for key press feedback.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewTextRatio com.android.inputmethod.latin:keyPreviewTextRatio}</code></td><td> Size of the text for key press feedback popup, int the proportion of key height </td></tr>
           <tr><td><code>{@link #KeyboardView_keyShiftedLetterHintActivatedColor com.android.inputmethod.latin:keyShiftedLetterHintActivatedColor}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_keyShiftedLetterHintInactivatedColor com.android.inputmethod.latin:keyShiftedLetterHintInactivatedColor}</code></td><td> Shifted letter hint colors </td></tr>
           <tr><td><code>{@link #KeyboardView_keyShiftedLetterHintPadding com.android.inputmethod.latin:keyShiftedLetterHintPadding}</code></td><td> Right padding of shifted letter hint to the edge of the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyShiftedLetterHintRatio com.android.inputmethod.latin:keyShiftedLetterHintRatio}</code></td><td> Size of the text for shifted letter hint, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextColor com.android.inputmethod.latin:keyTextColor}</code></td><td> Color to use for the label in a key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextInactivatedColor com.android.inputmethod.latin:keyTextInactivatedColor}</code></td><td> Color to use for the label in a key when in inactivated state.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextStyle com.android.inputmethod.latin:keyTextStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_moreKeysLayout com.android.inputmethod.latin:moreKeysLayout}</code></td><td> Layout resource for more keys panel </td></tr>
           <tr><td><code>{@link #KeyboardView_shadowColor com.android.inputmethod.latin:shadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_shadowRadius com.android.inputmethod.latin:shadowRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_verticalCorrection com.android.inputmethod.latin:verticalCorrection}</code></td><td> Amount to offset the touch Y coordinate by, for bias correction.</td></tr>
           </table>
           @see #KeyboardView_backgroundDimAlpha
           @see #KeyboardView_keyBackground
           @see #KeyboardView_keyHintLabelColor
           @see #KeyboardView_keyHintLabelRatio
           @see #KeyboardView_keyHintLetterColor
           @see #KeyboardView_keyHintLetterPadding
           @see #KeyboardView_keyHintLetterRatio
           @see #KeyboardView_keyLabelHorizontalPadding
           @see #KeyboardView_keyLabelRatio
           @see #KeyboardView_keyLabelSize
           @see #KeyboardView_keyLargeLabelRatio
           @see #KeyboardView_keyLargeLetterRatio
           @see #KeyboardView_keyLetterRatio
           @see #KeyboardView_keyLetterSize
           @see #KeyboardView_keyPopupHintLetterPadding
           @see #KeyboardView_keyPreviewBackground
           @see #KeyboardView_keyPreviewHeight
           @see #KeyboardView_keyPreviewLayout
           @see #KeyboardView_keyPreviewLeftBackground
           @see #KeyboardView_keyPreviewLingerTimeout
           @see #KeyboardView_keyPreviewOffset
           @see #KeyboardView_keyPreviewRightBackground
           @see #KeyboardView_keyPreviewTextColor
           @see #KeyboardView_keyPreviewTextRatio
           @see #KeyboardView_keyShiftedLetterHintActivatedColor
           @see #KeyboardView_keyShiftedLetterHintInactivatedColor
           @see #KeyboardView_keyShiftedLetterHintPadding
           @see #KeyboardView_keyShiftedLetterHintRatio
           @see #KeyboardView_keyTextColor
           @see #KeyboardView_keyTextInactivatedColor
           @see #KeyboardView_keyTextStyle
           @see #KeyboardView_moreKeysLayout
           @see #KeyboardView_shadowColor
           @see #KeyboardView_shadowRadius
           @see #KeyboardView_verticalCorrection
         */
        public static final int[] KeyboardView = {
            0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f,
            0x7f010010, 0x7f010011, 0x7f010012, 0x7f010013,
            0x7f010014, 0x7f010015, 0x7f010016, 0x7f010017,
            0x7f010018, 0x7f010019, 0x7f01001a, 0x7f01001b,
            0x7f01001c, 0x7f01001d, 0x7f01001e, 0x7f01001f,
            0x7f010020, 0x7f010021, 0x7f010022, 0x7f010023,
            0x7f010024, 0x7f010025, 0x7f010026, 0x7f010027,
            0x7f010028, 0x7f010029, 0x7f01002a, 0x7f01002b,
            0x7f01002c, 0x7f01002d, 0x7f01002e
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#backgroundDimAlpha}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:backgroundDimAlpha
        */
        public static final int KeyboardView_backgroundDimAlpha = 33;
        /**
          <p>
          @attr description
           Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyBackground
        */
        public static final int KeyboardView_keyBackground = 0;
        /**
          <p>
          @attr description
           Key hint label color 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyHintLabelColor
        */
        public static final int KeyboardView_keyHintLabelColor = 17;
        /**
          <p>
          @attr description
           Size of the text for hint label, in the proportion of key height. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyHintLabelRatio
        */
        public static final int KeyboardView_keyHintLabelRatio = 8;
        /**
          <p>
          @attr description
           Key hint letter (= one character hint label) color 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyHintLetterColor
        */
        public static final int KeyboardView_keyHintLetterColor = 16;
        /**
          <p>
          @attr description
           Right padding of hint letter to the edge of the key.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyHintLetterPadding
        */
        public static final int KeyboardView_keyHintLetterPadding = 11;
        /**
          <p>
          @attr description
           Size of the text for hint letter (= one character hint label), in the proportion of
             key height. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyHintLetterRatio
        */
        public static final int KeyboardView_keyHintLetterRatio = 7;
        /**
          <p>
          @attr description
           Horizontal padding of left/right aligned key label to the edge of the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyLabelHorizontalPadding
        */
        public static final int KeyboardView_keyLabelHorizontalPadding = 10;
        /**
          <p>
          @attr description
           Size of the text for keys with multiple letters, in the proportion of key height. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyLabelRatio
        */
        public static final int KeyboardView_keyLabelRatio = 5;
        /**
          <p>
          @attr description
           Size of the text for keys with multiple letters. If not defined, keyLabelRatio takes
             effect. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyLabelSize
        */
        public static final int KeyboardView_keyLabelSize = 2;
        /**
          <p>
          @attr description
           Large size of the text for keys with multiple letters, in the proportion of key height. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyLargeLabelRatio
        */
        public static final int KeyboardView_keyLargeLabelRatio = 6;
        /**
          <p>
          @attr description
           Large size of the text for one letter keys, in the proportion of key height. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyLargeLetterRatio
        */
        public static final int KeyboardView_keyLargeLetterRatio = 4;
        /**
          <p>
          @attr description
           Size of the text for one letter keys, in the proportion of key height. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyLetterRatio
        */
        public static final int KeyboardView_keyLetterRatio = 3;
        /**
          <p>
          @attr description
           Size of the text for one letter keys. If not defined, keyLetterRatio takes effect. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyLetterSize
        */
        public static final int KeyboardView_keyLetterSize = 1;
        /**
          <p>
          @attr description
           Bottom padding of popup hint letter "..." to the edge of the key.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyPopupHintLetterPadding
        */
        public static final int KeyboardView_keyPopupHintLetterPadding = 12;
        /**
          <p>
          @attr description
           The background for key press feedback. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyPreviewBackground
        */
        public static final int KeyboardView_keyPreviewBackground = 21;
        /**
          <p>
          @attr description
           Height of the key press feedback popup. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyPreviewHeight
        */
        public static final int KeyboardView_keyPreviewHeight = 26;
        /**
          <p>
          @attr description
           Layout resource for key press feedback.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyPreviewLayout
        */
        public static final int KeyboardView_keyPreviewLayout = 20;
        /**
          <p>
          @attr description
           The background for the left edge key press feedback. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyPreviewLeftBackground
        */
        public static final int KeyboardView_keyPreviewLeftBackground = 22;
        /**
          <p>
          @attr description
           Delay after key releasing and key press feedback dismissing in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyPreviewLingerTimeout
        */
        public static final int KeyboardView_keyPreviewLingerTimeout = 28;
        /**
          <p>
          @attr description
           Vertical offset of the key press feedback from the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyPreviewOffset
        */
        public static final int KeyboardView_keyPreviewOffset = 25;
        /**
          <p>
          @attr description
           The background for the right edge key press feedback. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyPreviewRightBackground
        */
        public static final int KeyboardView_keyPreviewRightBackground = 23;
        /**
          <p>
          @attr description
           The text color for key press feedback. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyPreviewTextColor
        */
        public static final int KeyboardView_keyPreviewTextColor = 24;
        /**
          <p>
          @attr description
           Size of the text for key press feedback popup, int the proportion of key height 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyPreviewTextRatio
        */
        public static final int KeyboardView_keyPreviewTextRatio = 27;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyShiftedLetterHintActivatedColor}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyShiftedLetterHintActivatedColor
        */
        public static final int KeyboardView_keyShiftedLetterHintActivatedColor = 19;
        /**
          <p>
          @attr description
           Shifted letter hint colors 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyShiftedLetterHintInactivatedColor
        */
        public static final int KeyboardView_keyShiftedLetterHintInactivatedColor = 18;
        /**
          <p>
          @attr description
           Right padding of shifted letter hint to the edge of the key.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyShiftedLetterHintPadding
        */
        public static final int KeyboardView_keyShiftedLetterHintPadding = 13;
        /**
          <p>
          @attr description
           Size of the text for shifted letter hint, in the proportion of key height. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyShiftedLetterHintRatio
        */
        public static final int KeyboardView_keyShiftedLetterHintRatio = 9;
        /**
          <p>
          @attr description
           Color to use for the label in a key. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyTextColor
        */
        public static final int KeyboardView_keyTextColor = 14;
        /**
          <p>
          @attr description
           Color to use for the label in a key when in inactivated state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyTextInactivatedColor
        */
        public static final int KeyboardView_keyTextInactivatedColor = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyTextStyle}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> This should be aligned with Typeface.NORMAL etc. </td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
<tr><td><code>boldItalic</code></td><td>3</td><td></td></tr>
</table>
          @attr name android:keyTextStyle
        */
        public static final int KeyboardView_keyTextStyle = 34;
        /**
          <p>
          @attr description
           Layout resource for more keys panel 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:moreKeysLayout
        */
        public static final int KeyboardView_moreKeysLayout = 30;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#shadowColor}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowColor
        */
        public static final int KeyboardView_shadowColor = 31;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#shadowRadius}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowRadius
        */
        public static final int KeyboardView_shadowRadius = 32;
        /**
          <p>
          @attr description
           Amount to offset the touch Y coordinate by, for bias correction. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:verticalCorrection
        */
        public static final int KeyboardView_verticalCorrection = 29;
        /** Attributes that can be used with a Keyboard_Case.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Case_clobberSettingsKey com.android.inputmethod.latin:clobberSettingsKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_countryCode com.android.inputmethod.latin:countryCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_hasShortcutKey com.android.inputmethod.latin:hasShortcutKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_imeAction com.android.inputmethod.latin:imeAction}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_isMultiLine com.android.inputmethod.latin:isMultiLine}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_keyboardLayoutSetElement com.android.inputmethod.latin:keyboardLayoutSetElement}</code></td><td> This should be aligned with KeyboardLayoutSet_Element's elementName.</td></tr>
           <tr><td><code>{@link #Keyboard_Case_languageCode com.android.inputmethod.latin:languageCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_languageSwitchKeyEnabled com.android.inputmethod.latin:languageSwitchKeyEnabled}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_localeCode com.android.inputmethod.latin:localeCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_mode com.android.inputmethod.latin:mode}</code></td><td> This should be aligned with KeyboardId.</td></tr>
           <tr><td><code>{@link #Keyboard_Case_navigateNext com.android.inputmethod.latin:navigateNext}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_navigatePrevious com.android.inputmethod.latin:navigatePrevious}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_passwordInput com.android.inputmethod.latin:passwordInput}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_shortcutKeyEnabled com.android.inputmethod.latin:shortcutKeyEnabled}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Case_clobberSettingsKey
           @see #Keyboard_Case_countryCode
           @see #Keyboard_Case_hasShortcutKey
           @see #Keyboard_Case_imeAction
           @see #Keyboard_Case_isMultiLine
           @see #Keyboard_Case_keyboardLayoutSetElement
           @see #Keyboard_Case_languageCode
           @see #Keyboard_Case_languageSwitchKeyEnabled
           @see #Keyboard_Case_localeCode
           @see #Keyboard_Case_mode
           @see #Keyboard_Case_navigateNext
           @see #Keyboard_Case_navigatePrevious
           @see #Keyboard_Case_passwordInput
           @see #Keyboard_Case_shortcutKeyEnabled
         */
        public static final int[] Keyboard_Case = {
            0x7f010080, 0x7f010081, 0x7f010082, 0x7f010083,
            0x7f010084, 0x7f010085, 0x7f010086, 0x7f010087,
            0x7f010088, 0x7f010089, 0x7f01008a, 0x7f01008b,
            0x7f01008c, 0x7f01008d
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#clobberSettingsKey}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:clobberSettingsKey
        */
        public static final int Keyboard_Case_clobberSettingsKey = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#countryCode}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:countryCode
        */
        public static final int Keyboard_Case_countryCode = 13;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#hasShortcutKey}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:hasShortcutKey
        */
        public static final int Keyboard_Case_hasShortcutKey = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#imeAction}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>actionUnspecified</code></td><td>0</td><td> This should be aligned with EditorInfo.IME_ACTION_* </td></tr>
<tr><td><code>actionNone</code></td><td>1</td><td></td></tr>
<tr><td><code>actionGo</code></td><td>2</td><td></td></tr>
<tr><td><code>actionSearch</code></td><td>3</td><td></td></tr>
<tr><td><code>actionSend</code></td><td>4</td><td></td></tr>
<tr><td><code>actionNext</code></td><td>5</td><td></td></tr>
<tr><td><code>actionDone</code></td><td>6</td><td></td></tr>
<tr><td><code>actionPrevious</code></td><td>7</td><td></td></tr>
<tr><td><code>actionCustomLabel</code></td><td>0x100</td><td>  This should be aligned with KeyboardId.IME_ACTION_* </td></tr>
</table>
          @attr name android:imeAction
        */
        public static final int Keyboard_Case_imeAction = 10;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#isMultiLine}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:isMultiLine
        */
        public static final int Keyboard_Case_isMultiLine = 9;
        /**
          <p>
          @attr description
           This should be aligned with KeyboardLayoutSet_Element's elementName. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:keyboardLayoutSetElement
        */
        public static final int Keyboard_Case_keyboardLayoutSetElement = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#languageCode}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:languageCode
        */
        public static final int Keyboard_Case_languageCode = 12;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#languageSwitchKeyEnabled}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:languageSwitchKeyEnabled
        */
        public static final int Keyboard_Case_languageSwitchKeyEnabled = 8;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#localeCode}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:localeCode
        */
        public static final int Keyboard_Case_localeCode = 11;
        /**
          <p>
          @attr description
           This should be aligned with KeyboardId.MODE_* 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>text</code></td><td>0</td><td></td></tr>
<tr><td><code>url</code></td><td>1</td><td></td></tr>
<tr><td><code>email</code></td><td>2</td><td></td></tr>
<tr><td><code>im</code></td><td>3</td><td></td></tr>
<tr><td><code>phone</code></td><td>4</td><td></td></tr>
<tr><td><code>number</code></td><td>5</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:mode
        */
        public static final int Keyboard_Case_mode = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#navigateNext}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:navigateNext
        */
        public static final int Keyboard_Case_navigateNext = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#navigatePrevious}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:navigatePrevious
        */
        public static final int Keyboard_Case_navigatePrevious = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#passwordInput}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:passwordInput
        */
        public static final int Keyboard_Case_passwordInput = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#shortcutKeyEnabled}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shortcutKeyEnabled
        */
        public static final int Keyboard_Case_shortcutKeyEnabled = 6;
        /** Attributes that can be used with a Keyboard_Include.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Include_keyboardLayout com.android.inputmethod.latin:keyboardLayout}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Include_keyboardLayout
         */
        public static final int[] Keyboard_Include = {
            0x7f01007f
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyboardLayout}
          attribute's value can be found in the {@link #Keyboard_Include} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:keyboardLayout
        */
        public static final int Keyboard_Include_keyboardLayout = 0;
        /** Attributes that can be used with a Keyboard_Key.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_additionalMoreKeys com.android.inputmethod.latin:additionalMoreKeys}</code></td><td> The keys to display in the more keys keyboard in addition to moreKeys.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_altCode com.android.inputmethod.latin:altCode}</code></td><td> The alternate unicode value that this key outputs while typing.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_backgroundType com.android.inputmethod.latin:backgroundType}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_code com.android.inputmethod.latin:code}</code></td><td> The unicode value that this key outputs.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyActionFlags com.android.inputmethod.latin:keyActionFlags}</code></td><td> The key action flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLabel com.android.inputmethod.latin:keyHintLabel}</code></td><td> The hint label to display on the key in conjunction with the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIcon com.android.inputmethod.latin:keyIcon}</code></td><td> The icon to display on the key instead of the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIconDisabled com.android.inputmethod.latin:keyIconDisabled}</code></td><td> The icon for disabled key </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIconPreview com.android.inputmethod.latin:keyIconPreview}</code></td><td> The icon to show in the popup preview.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabel com.android.inputmethod.latin:keyLabel}</code></td><td> The label to display on the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabelFlags com.android.inputmethod.latin:keyLabelFlags}</code></td><td> The key label flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyOutputText com.android.inputmethod.latin:keyOutputText}</code></td><td> The string of characters to output when this key is pressed.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyStyle com.android.inputmethod.latin:keyStyle}</code></td><td> The key style to specify a set of key attributes defined by <key_style/> </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyWidth com.android.inputmethod.latin:keyWidth}</code></td><td> Width of the key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyXPos com.android.inputmethod.latin:keyXPos}</code></td><td> The X-coordinate of upper right corner of this key including horizontal gap.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_maxMoreKeysColumn com.android.inputmethod.latin:maxMoreKeysColumn}</code></td><td> Maximum column of more keys keyboard </td></tr>
           <tr><td><code>{@link #Keyboard_Key_moreKeys com.android.inputmethod.latin:moreKeys}</code></td><td> The keys to display in the more keys keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_visualInsetsLeft com.android.inputmethod.latin:visualInsetsLeft}</code></td><td> Visual insets </td></tr>
           <tr><td><code>{@link #Keyboard_Key_visualInsetsRight com.android.inputmethod.latin:visualInsetsRight}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Key_additionalMoreKeys
           @see #Keyboard_Key_altCode
           @see #Keyboard_Key_backgroundType
           @see #Keyboard_Key_code
           @see #Keyboard_Key_keyActionFlags
           @see #Keyboard_Key_keyHintLabel
           @see #Keyboard_Key_keyIcon
           @see #Keyboard_Key_keyIconDisabled
           @see #Keyboard_Key_keyIconPreview
           @see #Keyboard_Key_keyLabel
           @see #Keyboard_Key_keyLabelFlags
           @see #Keyboard_Key_keyOutputText
           @see #Keyboard_Key_keyStyle
           @see #Keyboard_Key_keyWidth
           @see #Keyboard_Key_keyXPos
           @see #Keyboard_Key_maxMoreKeysColumn
           @see #Keyboard_Key_moreKeys
           @see #Keyboard_Key_visualInsetsLeft
           @see #Keyboard_Key_visualInsetsRight
         */
        public static final int[] Keyboard_Key = {
            0x7f01006c, 0x7f01006d, 0x7f01006e, 0x7f01006f,
            0x7f010070, 0x7f010071, 0x7f010072, 0x7f010073,
            0x7f010074, 0x7f010075, 0x7f010076, 0x7f010077,
            0x7f010078, 0x7f010079, 0x7f01007a, 0x7f01007b,
            0x7f01007c, 0x7f01007d, 0x7f01007e
        };
        /**
          <p>
          @attr description
           The keys to display in the more keys keyboard in addition to moreKeys.
             The additional more keys are inserted at the '%' markers in the moreKeys if any.
             They are inserted at the head of moreKeys if none.
             If there are remaining entries of additionalMoreKeys even after all '%' markers have
             been replaced, those remaining entries are appended at the end of moreKeys. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:additionalMoreKeys
        */
        public static final int Keyboard_Key_additionalMoreKeys = 3;
        /**
          <p>
          @attr description
           The alternate unicode value that this key outputs while typing.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:altCode
        */
        public static final int Keyboard_Key_altCode = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#backgroundType}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> This should be aligned with Key.BACKGROUND_TYPE_* </td></tr>
<tr><td><code>functional</code></td><td>1</td><td></td></tr>
<tr><td><code>action</code></td><td>2</td><td></td></tr>
<tr><td><code>stickyOff</code></td><td>3</td><td></td></tr>
<tr><td><code>stickyOn</code></td><td>4</td><td></td></tr>
</table>
          @attr name android:backgroundType
        */
        public static final int Keyboard_Key_backgroundType = 5;
        /**
          <p>
          @attr description
           The unicode value that this key outputs.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:code
        */
        public static final int Keyboard_Key_code = 0;
        /**
          <p>
          @attr description
           The key action flags. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>isRepeatable</code></td><td>0x01</td><td> This should be aligned with Key.ACTION_FLAGS_* </td></tr>
<tr><td><code>noKeyPreview</code></td><td>0x02</td><td></td></tr>
<tr><td><code>altCodeWhileTyping</code></td><td>0x04</td><td></td></tr>
<tr><td><code>enableLongPress</code></td><td>0x08</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:keyActionFlags
        */
        public static final int Keyboard_Key_keyActionFlags = 6;
        /**
          <p>
          @attr description
           The hint label to display on the key in conjunction with the label. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyHintLabel
        */
        public static final int Keyboard_Key_keyHintLabel = 9;
        /**
          <p>
          @attr description
           The icon to display on the key instead of the label. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyIcon
        */
        public static final int Keyboard_Key_keyIcon = 11;
        /**
          <p>
          @attr description
           The icon for disabled key 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyIconDisabled
        */
        public static final int Keyboard_Key_keyIconDisabled = 12;
        /**
          <p>
          @attr description
           The icon to show in the popup preview. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyIconPreview
        */
        public static final int Keyboard_Key_keyIconPreview = 13;
        /**
          <p>
          @attr description
           The label to display on the key. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyLabel
        */
        public static final int Keyboard_Key_keyLabel = 8;
        /**
          <p>
          @attr description
           The key label flags. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignLeft</code></td><td>0x01</td><td> This should be aligned with Key.LABEL_FLAGS__* </td></tr>
<tr><td><code>alignRight</code></td><td>0x02</td><td></td></tr>
<tr><td><code>alignLeftOfCenter</code></td><td>0x08</td><td></td></tr>
<tr><td><code>fontNormal</code></td><td>0x10</td><td></td></tr>
<tr><td><code>fontMonoSpace</code></td><td>0x20</td><td></td></tr>
<tr><td><code>followKeyLargeLetterRatio</code></td><td>0x40</td><td></td></tr>
<tr><td><code>followKeyLetterRatio</code></td><td>0x80</td><td></td></tr>
<tr><td><code>followKeyLabelRatio</code></td><td>0xC0</td><td></td></tr>
<tr><td><code>followKeyLargeLabelRatio</code></td><td>0x100</td><td></td></tr>
<tr><td><code>followKeyHintLabelRatio</code></td><td>0x140</td><td></td></tr>
<tr><td><code>hasPopupHint</code></td><td>0x200</td><td></td></tr>
<tr><td><code>hasShiftedLetterHint</code></td><td>0x400</td><td></td></tr>
<tr><td><code>hasHintLabel</code></td><td>0x800</td><td></td></tr>
<tr><td><code>withIconLeft</code></td><td>0x1000</td><td></td></tr>
<tr><td><code>withIconRight</code></td><td>0x2000</td><td></td></tr>
<tr><td><code>autoXScale</code></td><td>0x4000</td><td></td></tr>
<tr><td><code>preserveCase</code></td><td>0x8000</td><td> If true, character case of code, altCode, moreKeys, keyOutputText, keyLabel,
                 or keyHintLabel will never be subject to change. </td></tr>
<tr><td><code>shiftedLetterActivated</code></td><td>0x10000</td><td> If true, use keyShiftedLetterHintActivatedColor for the shifted letter hint and
                 keyTextInactivatedColor for the primary key top label. </td></tr>
<tr><td><code>fromCustomActionLabel</code></td><td>0x20000</td><td> If true, use EditorInfo.actionLabel for the key label. </td></tr>
<tr><td><code>disableKeyHintLabel</code></td><td>0x40000000</td><td> If true, disable keyHintLabel. </td></tr>
<tr><td><code>disableAdditionalMoreKeys</code></td><td>0x80000000</td><td> If true, disable additionalMoreKeys. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:keyLabelFlags
        */
        public static final int Keyboard_Key_keyLabelFlags = 10;
        /**
          <p>
          @attr description
           The string of characters to output when this key is pressed. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyOutputText
        */
        public static final int Keyboard_Key_keyOutputText = 7;
        /**
          <p>
          @attr description
           The key style to specify a set of key attributes defined by <key_style/> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyStyle
        */
        public static final int Keyboard_Key_keyStyle = 14;
        /**
          <p>
          @attr description
           Width of the key, in pixels or percentage of display width.
             If the value is fillRight, the actual key width will be determined to fill out the area
             up to the right edge of the keyboard. 
 This should be aligned with KeyboardBuilder.Row.KEYWIDTH_* 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fillRight</code></td><td>-1</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:keyWidth
        */
        public static final int Keyboard_Key_keyWidth = 17;
        /**
          <p>
          @attr description
           The X-coordinate of upper right corner of this key including horizontal gap.
             If the value is negative, the origin is the right edge of the keyboard. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyXPos
        */
        public static final int Keyboard_Key_keyXPos = 18;
        /**
          <p>
          @attr description
           Maximum column of more keys keyboard 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:maxMoreKeysColumn
        */
        public static final int Keyboard_Key_maxMoreKeysColumn = 4;
        /**
          <p>
          @attr description
           The keys to display in the more keys keyboard. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:moreKeys
        */
        public static final int Keyboard_Key_moreKeys = 2;
        /**
          <p>
          @attr description
           Visual insets 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:visualInsetsLeft
        */
        public static final int Keyboard_Key_visualInsetsLeft = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#visualInsetsRight}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:visualInsetsRight
        */
        public static final int Keyboard_Key_visualInsetsRight = 16;
        /** Attributes that can be used with a Keyboard_KeyStyle.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_KeyStyle_parentStyle com.android.inputmethod.latin:parentStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_KeyStyle_styleName com.android.inputmethod.latin:styleName}</code></td><td></td></tr>
           </table>
           @see #Keyboard_KeyStyle_parentStyle
           @see #Keyboard_KeyStyle_styleName
         */
        public static final int[] Keyboard_KeyStyle = {
            0x7f01008e, 0x7f01008f
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#parentStyle}
          attribute's value can be found in the {@link #Keyboard_KeyStyle} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:parentStyle
        */
        public static final int Keyboard_KeyStyle_parentStyle = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#styleName}
          attribute's value can be found in the {@link #Keyboard_KeyStyle} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:styleName
        */
        public static final int Keyboard_KeyStyle_styleName = 0;
        /** Attributes that can be used with a LatinKeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LatinKeyboardView_altCodeKeyWhileTypingFadeinAnimator com.android.inputmethod.latin:altCodeKeyWhileTypingFadeinAnimator}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardView_altCodeKeyWhileTypingFadeoutAnimator com.android.inputmethod.latin:altCodeKeyWhileTypingFadeoutAnimator}</code></td><td> Fadeout and fadein animator for altCodeWhileTyping keys.</td></tr>
           <tr><td><code>{@link #LatinKeyboardView_autoCorrectionSpacebarLedEnabled com.android.inputmethod.latin:autoCorrectionSpacebarLedEnabled}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardView_autoCorrectionSpacebarLedIcon com.android.inputmethod.latin:autoCorrectionSpacebarLedIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardView_ignoreAltCodeKeyTimeout com.android.inputmethod.latin:ignoreAltCodeKeyTimeout}</code></td><td> Ignore special key timeout while typing in millisecond.</td></tr>
           <tr><td><code>{@link #LatinKeyboardView_keyHysteresisDistance com.android.inputmethod.latin:keyHysteresisDistance}</code></td><td> Key detection hysteresis distance.</td></tr>
           <tr><td><code>{@link #LatinKeyboardView_keyRepeatInterval com.android.inputmethod.latin:keyRepeatInterval}</code></td><td> Key repeat interval in millisecond.</td></tr>
           <tr><td><code>{@link #LatinKeyboardView_keyRepeatStartTimeout com.android.inputmethod.latin:keyRepeatStartTimeout}</code></td><td> Key repeat start timeout </td></tr>
           <tr><td><code>{@link #LatinKeyboardView_languageOnSpacebarFadeoutAnimator com.android.inputmethod.latin:languageOnSpacebarFadeoutAnimator}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardView_languageOnSpacebarFinalAlpha com.android.inputmethod.latin:languageOnSpacebarFinalAlpha}</code></td><td> Fadeout animator for spacebar language label.</td></tr>
           <tr><td><code>{@link #LatinKeyboardView_longPressKeyTimeout com.android.inputmethod.latin:longPressKeyTimeout}</code></td><td> Long press timeout of letter key in millisecond.</td></tr>
           <tr><td><code>{@link #LatinKeyboardView_longPressShiftKeyTimeout com.android.inputmethod.latin:longPressShiftKeyTimeout}</code></td><td> Long press timeout of shift key in millisecond.</td></tr>
           <tr><td><code>{@link #LatinKeyboardView_showMoreKeysKeyboardAtTouchedPoint com.android.inputmethod.latin:showMoreKeysKeyboardAtTouchedPoint}</code></td><td> More keys keyboard will shown at touched point.</td></tr>
           <tr><td><code>{@link #LatinKeyboardView_slidingKeyInputEnable com.android.inputmethod.latin:slidingKeyInputEnable}</code></td><td> Sliding key input enable </td></tr>
           <tr><td><code>{@link #LatinKeyboardView_spacebarTextColor com.android.inputmethod.latin:spacebarTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardView_spacebarTextRatio com.android.inputmethod.latin:spacebarTextRatio}</code></td><td> Size of the text for spacebar language label, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #LatinKeyboardView_spacebarTextShadowColor com.android.inputmethod.latin:spacebarTextShadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardView_touchNoiseThresholdDistance com.android.inputmethod.latin:touchNoiseThresholdDistance}</code></td><td> Touch noise threshold distance in millimeter </td></tr>
           <tr><td><code>{@link #LatinKeyboardView_touchNoiseThresholdTime com.android.inputmethod.latin:touchNoiseThresholdTime}</code></td><td> Touch noise threshold time in millisecond </td></tr>
           </table>
           @see #LatinKeyboardView_altCodeKeyWhileTypingFadeinAnimator
           @see #LatinKeyboardView_altCodeKeyWhileTypingFadeoutAnimator
           @see #LatinKeyboardView_autoCorrectionSpacebarLedEnabled
           @see #LatinKeyboardView_autoCorrectionSpacebarLedIcon
           @see #LatinKeyboardView_ignoreAltCodeKeyTimeout
           @see #LatinKeyboardView_keyHysteresisDistance
           @see #LatinKeyboardView_keyRepeatInterval
           @see #LatinKeyboardView_keyRepeatStartTimeout
           @see #LatinKeyboardView_languageOnSpacebarFadeoutAnimator
           @see #LatinKeyboardView_languageOnSpacebarFinalAlpha
           @see #LatinKeyboardView_longPressKeyTimeout
           @see #LatinKeyboardView_longPressShiftKeyTimeout
           @see #LatinKeyboardView_showMoreKeysKeyboardAtTouchedPoint
           @see #LatinKeyboardView_slidingKeyInputEnable
           @see #LatinKeyboardView_spacebarTextColor
           @see #LatinKeyboardView_spacebarTextRatio
           @see #LatinKeyboardView_spacebarTextShadowColor
           @see #LatinKeyboardView_touchNoiseThresholdDistance
           @see #LatinKeyboardView_touchNoiseThresholdTime
         */
        public static final int[] LatinKeyboardView = {
            0x7f01002f, 0x7f010030, 0x7f010031, 0x7f010032,
            0x7f010033, 0x7f010034, 0x7f010035, 0x7f010036,
            0x7f010037, 0x7f010038, 0x7f010039, 0x7f01003a,
            0x7f01003b, 0x7f01003c, 0x7f01003d, 0x7f01003e,
            0x7f01003f, 0x7f010040, 0x7f010041
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#altCodeKeyWhileTypingFadeinAnimator}
          attribute's value can be found in the {@link #LatinKeyboardView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:altCodeKeyWhileTypingFadeinAnimator
        */
        public static final int LatinKeyboardView_altCodeKeyWhileTypingFadeinAnimator = 8;
        /**
          <p>
          @attr description
           Fadeout and fadein animator for altCodeWhileTyping keys. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:altCodeKeyWhileTypingFadeoutAnimator
        */
        public static final int LatinKeyboardView_altCodeKeyWhileTypingFadeoutAnimator = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#autoCorrectionSpacebarLedEnabled}
          attribute's value can be found in the {@link #LatinKeyboardView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:autoCorrectionSpacebarLedEnabled
        */
        public static final int LatinKeyboardView_autoCorrectionSpacebarLedEnabled = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#autoCorrectionSpacebarLedIcon}
          attribute's value can be found in the {@link #LatinKeyboardView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:autoCorrectionSpacebarLedIcon
        */
        public static final int LatinKeyboardView_autoCorrectionSpacebarLedIcon = 1;
        /**
          <p>
          @attr description
           Ignore special key timeout while typing in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:ignoreAltCodeKeyTimeout
        */
        public static final int LatinKeyboardView_ignoreAltCodeKeyTimeout = 17;
        /**
          <p>
          @attr description
           Key detection hysteresis distance. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyHysteresisDistance
        */
        public static final int LatinKeyboardView_keyHysteresisDistance = 9;
        /**
          <p>
          @attr description
           Key repeat interval in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyRepeatInterval
        */
        public static final int LatinKeyboardView_keyRepeatInterval = 14;
        /**
          <p>
          @attr description
           Key repeat start timeout 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyRepeatStartTimeout
        */
        public static final int LatinKeyboardView_keyRepeatStartTimeout = 13;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#languageOnSpacebarFadeoutAnimator}
          attribute's value can be found in the {@link #LatinKeyboardView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:languageOnSpacebarFadeoutAnimator
        */
        public static final int LatinKeyboardView_languageOnSpacebarFadeoutAnimator = 6;
        /**
          <p>
          @attr description
           Fadeout animator for spacebar language label. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:languageOnSpacebarFinalAlpha
        */
        public static final int LatinKeyboardView_languageOnSpacebarFinalAlpha = 5;
        /**
          <p>
          @attr description
           Long press timeout of letter key in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:longPressKeyTimeout
        */
        public static final int LatinKeyboardView_longPressKeyTimeout = 15;
        /**
          <p>
          @attr description
           Long press timeout of shift key in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:longPressShiftKeyTimeout
        */
        public static final int LatinKeyboardView_longPressShiftKeyTimeout = 16;
        /**
          <p>
          @attr description
           More keys keyboard will shown at touched point. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:showMoreKeysKeyboardAtTouchedPoint
        */
        public static final int LatinKeyboardView_showMoreKeysKeyboardAtTouchedPoint = 18;
        /**
          <p>
          @attr description
           Sliding key input enable 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:slidingKeyInputEnable
        */
        public static final int LatinKeyboardView_slidingKeyInputEnable = 12;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#spacebarTextColor}
          attribute's value can be found in the {@link #LatinKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:spacebarTextColor
        */
        public static final int LatinKeyboardView_spacebarTextColor = 3;
        /**
          <p>
          @attr description
           Size of the text for spacebar language label, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:spacebarTextRatio
        */
        public static final int LatinKeyboardView_spacebarTextRatio = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#spacebarTextShadowColor}
          attribute's value can be found in the {@link #LatinKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:spacebarTextShadowColor
        */
        public static final int LatinKeyboardView_spacebarTextShadowColor = 4;
        /**
          <p>
          @attr description
           Touch noise threshold distance in millimeter 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:touchNoiseThresholdDistance
        */
        public static final int LatinKeyboardView_touchNoiseThresholdDistance = 11;
        /**
          <p>
          @attr description
           Touch noise threshold time in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:touchNoiseThresholdTime
        */
        public static final int LatinKeyboardView_touchNoiseThresholdTime = 10;
        /** Attributes that can be used with a SuggestionsView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SuggestionsView_alphaAutoCorrect com.android.inputmethod.latin:alphaAutoCorrect}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_alphaObsoleted com.android.inputmethod.latin:alphaObsoleted}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_alphaSuggested com.android.inputmethod.latin:alphaSuggested}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_alphaTypedWord com.android.inputmethod.latin:alphaTypedWord}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_alphaValidTypedWord com.android.inputmethod.latin:alphaValidTypedWord}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_centerSuggestionPercentile com.android.inputmethod.latin:centerSuggestionPercentile}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_colorAutoCorrect com.android.inputmethod.latin:colorAutoCorrect}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_colorSuggested com.android.inputmethod.latin:colorSuggested}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_colorTypedWord com.android.inputmethod.latin:colorTypedWord}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_colorValidTypedWord com.android.inputmethod.latin:colorValidTypedWord}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_maxMoreSuggestionsRow com.android.inputmethod.latin:maxMoreSuggestionsRow}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_minMoreSuggestionsWidth com.android.inputmethod.latin:minMoreSuggestionsWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_suggestionStripOption com.android.inputmethod.latin:suggestionStripOption}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionsView_suggestionsCountInStrip com.android.inputmethod.latin:suggestionsCountInStrip}</code></td><td></td></tr>
           </table>
           @see #SuggestionsView_alphaAutoCorrect
           @see #SuggestionsView_alphaObsoleted
           @see #SuggestionsView_alphaSuggested
           @see #SuggestionsView_alphaTypedWord
           @see #SuggestionsView_alphaValidTypedWord
           @see #SuggestionsView_centerSuggestionPercentile
           @see #SuggestionsView_colorAutoCorrect
           @see #SuggestionsView_colorSuggested
           @see #SuggestionsView_colorTypedWord
           @see #SuggestionsView_colorValidTypedWord
           @see #SuggestionsView_maxMoreSuggestionsRow
           @see #SuggestionsView_minMoreSuggestionsWidth
           @see #SuggestionsView_suggestionStripOption
           @see #SuggestionsView_suggestionsCountInStrip
         */
        public static final int[] SuggestionsView = {
            0x7f010042, 0x7f010043, 0x7f010044, 0x7f010045,
            0x7f010046, 0x7f010047, 0x7f010048, 0x7f010049,
            0x7f01004a, 0x7f01004b, 0x7f01004c, 0x7f01004d,
            0x7f01004e, 0x7f01004f
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#alphaAutoCorrect}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:alphaAutoCorrect
        */
        public static final int SuggestionsView_alphaAutoCorrect = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#alphaObsoleted}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:alphaObsoleted
        */
        public static final int SuggestionsView_alphaObsoleted = 9;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#alphaSuggested}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:alphaSuggested
        */
        public static final int SuggestionsView_alphaSuggested = 8;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#alphaTypedWord}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:alphaTypedWord
        */
        public static final int SuggestionsView_alphaTypedWord = 6;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#alphaValidTypedWord}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:alphaValidTypedWord
        */
        public static final int SuggestionsView_alphaValidTypedWord = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#centerSuggestionPercentile}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:centerSuggestionPercentile
        */
        public static final int SuggestionsView_centerSuggestionPercentile = 11;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#colorAutoCorrect}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:colorAutoCorrect
        */
        public static final int SuggestionsView_colorAutoCorrect = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#colorSuggested}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:colorSuggested
        */
        public static final int SuggestionsView_colorSuggested = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#colorTypedWord}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:colorTypedWord
        */
        public static final int SuggestionsView_colorTypedWord = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#colorValidTypedWord}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:colorValidTypedWord
        */
        public static final int SuggestionsView_colorValidTypedWord = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#maxMoreSuggestionsRow}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:maxMoreSuggestionsRow
        */
        public static final int SuggestionsView_maxMoreSuggestionsRow = 12;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#minMoreSuggestionsWidth}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:minMoreSuggestionsWidth
        */
        public static final int SuggestionsView_minMoreSuggestionsWidth = 13;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#suggestionStripOption}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>autoCorrectBold</code></td><td>0x01</td><td> This should be aligned with SuggestionsViewParams.AUTO_CORRECT_* and etc. </td></tr>
<tr><td><code>autoCorrectUnderline</code></td><td>0x02</td><td></td></tr>
<tr><td><code>validTypedWordBold</code></td><td>0x04</td><td></td></tr>
</table>
          @attr name android:suggestionStripOption
        */
        public static final int SuggestionsView_suggestionStripOption = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#suggestionsCountInStrip}
          attribute's value can be found in the {@link #SuggestionsView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionsCountInStrip
        */
        public static final int SuggestionsView_suggestionsCountInStrip = 10;
    };
}
